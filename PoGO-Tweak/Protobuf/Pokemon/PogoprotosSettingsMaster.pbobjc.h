// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Settings.Master.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

 #import "PogoprotosDataPlayer.pbobjc.h"
 #import "PogoprotosEnums.pbobjc.h"
 #import "PogoprotosDataBadge.pbobjc.h"
 #import "PogoprotosSettingsMasterPokemon.pbobjc.h"
 #import "PogoprotosInventoryItem.pbobjc.h"
 #import "PogoprotosSettingsMasterItem.pbobjc.h"
 #import "PogoprotosSettingsMasterQuest.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BadgeCaptureReward;
@class BattleAttributes;
@class CameraAttributes;
@class DailyQuestSettings;
@class EggIncubatorAttributes;
@class EncounterAttributes;
@class EvolutionBranch;
@class ExperienceBoostAttributes;
@class FoodAttributes;
@class FormSettings_Form;
@class FortModifierAttributes;
@class IncenseAttributes;
@class InventoryUpgradeAttributes;
@class PokeballAttributes;
@class PokemonGenderSettings;
@class PotionAttributes;
@class ReviveAttributes;
@class StatsAttributes;
GPB_ENUM_FWD_DECLARE(BadgeType);
GPB_ENUM_FWD_DECLARE(Form);
GPB_ENUM_FWD_DECLARE(HoloIapItemCategory);
GPB_ENUM_FWD_DECLARE(ItemCategory);
GPB_ENUM_FWD_DECLARE(ItemId);
GPB_ENUM_FWD_DECLARE(ItemType);
GPB_ENUM_FWD_DECLARE(PlayerAvatarType);
GPB_ENUM_FWD_DECLARE(PokemonFamilyId);
GPB_ENUM_FWD_DECLARE(PokemonId);
GPB_ENUM_FWD_DECLARE(PokemonMove);
GPB_ENUM_FWD_DECLARE(PokemonRarity);
GPB_ENUM_FWD_DECLARE(PokemonType);
GPB_ENUM_FWD_DECLARE(QuestType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AvatarCustomizationSettings_AvatarCustomizationPromoType

typedef GPB_ENUM(AvatarCustomizationSettings_AvatarCustomizationPromoType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AvatarCustomizationSettings_AvatarCustomizationPromoType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AvatarCustomizationSettings_AvatarCustomizationPromoType_UnsetPromoType = 0,
  AvatarCustomizationSettings_AvatarCustomizationPromoType_Sale = 1,
  AvatarCustomizationSettings_AvatarCustomizationPromoType_Featured = 2,
};

GPBEnumDescriptor *AvatarCustomizationSettings_AvatarCustomizationPromoType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AvatarCustomizationSettings_AvatarCustomizationPromoType_IsValidValue(int32_t value);

#pragma mark - Enum AvatarCustomizationSettings_AvatarCustomizationUnlockType

typedef GPB_ENUM(AvatarCustomizationSettings_AvatarCustomizationUnlockType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_UnsetUnlockType = 0,
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_Default = 1,
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_MedalReward = 2,
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_IapClothing = 3,
  AvatarCustomizationSettings_AvatarCustomizationUnlockType_LevelReward = 4,
};

GPBEnumDescriptor *AvatarCustomizationSettings_AvatarCustomizationUnlockType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AvatarCustomizationSettings_AvatarCustomizationUnlockType_IsValidValue(int32_t value);

#pragma mark - Enum PokemonSettings_BuddySize

typedef GPB_ENUM(PokemonSettings_BuddySize) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PokemonSettings_BuddySize_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PokemonSettings_BuddySize_BuddyMedium = 0,
  PokemonSettings_BuddySize_BuddyShoulder = 1,
  PokemonSettings_BuddySize_BuddyBig = 2,
  PokemonSettings_BuddySize_BuddyFlying = 3,
  PokemonSettings_BuddySize_BuddyBaby = 4,
};

GPBEnumDescriptor *PokemonSettings_BuddySize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PokemonSettings_BuddySize_IsValidValue(int32_t value);

#pragma mark - PogoprotosSettingsMasterRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PogoprotosSettingsMasterRoot : GPBRootObject
@end

#pragma mark - AvatarCustomizationSettings

typedef GPB_ENUM(AvatarCustomizationSettings_FieldNumber) {
  AvatarCustomizationSettings_FieldNumber_Enabled = 1,
  AvatarCustomizationSettings_FieldNumber_AvatarType = 2,
  AvatarCustomizationSettings_FieldNumber_SlotArray = 3,
  AvatarCustomizationSettings_FieldNumber_BundleName = 4,
  AvatarCustomizationSettings_FieldNumber_AssetName = 5,
  AvatarCustomizationSettings_FieldNumber_GroupName = 6,
  AvatarCustomizationSettings_FieldNumber_SortOrder = 7,
  AvatarCustomizationSettings_FieldNumber_UnlockType = 8,
  AvatarCustomizationSettings_FieldNumber_PromoTypeArray = 9,
  AvatarCustomizationSettings_FieldNumber_UnlockBadgeType = 10,
  AvatarCustomizationSettings_FieldNumber_IapSku = 11,
  AvatarCustomizationSettings_FieldNumber_UnlockBadgeLevel = 12,
  AvatarCustomizationSettings_FieldNumber_IconName = 13,
  AvatarCustomizationSettings_FieldNumber_UnlockPlayerLevel = 14,
};

@interface AvatarCustomizationSettings : GPBMessage

@property(nonatomic, readwrite) BOOL enabled;

@property(nonatomic, readwrite) enum PlayerAvatarType avatarType;

// |slotArray| contains |Slot|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *slotArray;
/** The number of items in @c slotArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slotArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bundleName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *assetName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;

@property(nonatomic, readwrite) int32_t sortOrder;

@property(nonatomic, readwrite) AvatarCustomizationSettings_AvatarCustomizationUnlockType unlockType;

// |promoTypeArray| contains |AvatarCustomizationSettings_AvatarCustomizationPromoType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *promoTypeArray;
/** The number of items in @c promoTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger promoTypeArray_Count;

@property(nonatomic, readwrite) enum BadgeType unlockBadgeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *iapSku;

@property(nonatomic, readwrite) int32_t unlockBadgeLevel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *iconName;

@property(nonatomic, readwrite) int32_t unlockPlayerLevel;

@end

/**
 * Fetches the raw value of a @c AvatarCustomizationSettings's @c avatarType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AvatarCustomizationSettings_AvatarType_RawValue(AvatarCustomizationSettings *message);
/**
 * Sets the raw value of an @c AvatarCustomizationSettings's @c avatarType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAvatarCustomizationSettings_AvatarType_RawValue(AvatarCustomizationSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c AvatarCustomizationSettings's @c unlockType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AvatarCustomizationSettings_UnlockType_RawValue(AvatarCustomizationSettings *message);
/**
 * Sets the raw value of an @c AvatarCustomizationSettings's @c unlockType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAvatarCustomizationSettings_UnlockType_RawValue(AvatarCustomizationSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c AvatarCustomizationSettings's @c unlockBadgeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AvatarCustomizationSettings_UnlockBadgeType_RawValue(AvatarCustomizationSettings *message);
/**
 * Sets the raw value of an @c AvatarCustomizationSettings's @c unlockBadgeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAvatarCustomizationSettings_UnlockBadgeType_RawValue(AvatarCustomizationSettings *message, int32_t value);

#pragma mark - BadgeSettings

typedef GPB_ENUM(BadgeSettings_FieldNumber) {
  BadgeSettings_FieldNumber_BadgeType = 1,
  BadgeSettings_FieldNumber_BadgeRank = 2,
  BadgeSettings_FieldNumber_TargetsArray = 3,
  BadgeSettings_FieldNumber_CaptureRewardArray = 4,
};

@interface BadgeSettings : GPBMessage

@property(nonatomic, readwrite) enum BadgeType badgeType;

@property(nonatomic, readwrite) int32_t badgeRank;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *targetsArray;
/** The number of items in @c targetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BadgeCaptureReward*> *captureRewardArray;
/** The number of items in @c captureRewardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger captureRewardArray_Count;

@end

/**
 * Fetches the raw value of a @c BadgeSettings's @c badgeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t BadgeSettings_BadgeType_RawValue(BadgeSettings *message);
/**
 * Sets the raw value of an @c BadgeSettings's @c badgeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetBadgeSettings_BadgeType_RawValue(BadgeSettings *message, int32_t value);

#pragma mark - CameraSettings

typedef GPB_ENUM(CameraSettings_FieldNumber) {
  CameraSettings_FieldNumber_NextCamera = 1,
  CameraSettings_FieldNumber_InterpolationArray = 2,
  CameraSettings_FieldNumber_TargetTypeArray = 3,
  CameraSettings_FieldNumber_EaseInSpeedArray = 4,
  CameraSettings_FieldNumber_EastOutSpeedArray = 5,
  CameraSettings_FieldNumber_DurationSecondsArray = 6,
  CameraSettings_FieldNumber_WaitSecondsArray = 7,
  CameraSettings_FieldNumber_TransitionSecondsArray = 8,
  CameraSettings_FieldNumber_AngleDegreeArray = 9,
  CameraSettings_FieldNumber_AngleOffsetDegreeArray = 10,
  CameraSettings_FieldNumber_PitchDegreeArray = 11,
  CameraSettings_FieldNumber_PitchOffsetDegreeArray = 12,
  CameraSettings_FieldNumber_RollDegreeArray = 13,
  CameraSettings_FieldNumber_DistanceMetersArray = 14,
  CameraSettings_FieldNumber_HeightPercentArray = 15,
  CameraSettings_FieldNumber_VertCtrRatioArray = 16,
};

@interface CameraSettings : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *nextCamera;

// |interpolationArray| contains |CameraInterpolation|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *interpolationArray;
/** The number of items in @c interpolationArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger interpolationArray_Count;

// |targetTypeArray| contains |CameraTarget|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *targetTypeArray;
/** The number of items in @c targetTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetTypeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *easeInSpeedArray;
/** The number of items in @c easeInSpeedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger easeInSpeedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *eastOutSpeedArray;
/** The number of items in @c eastOutSpeedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eastOutSpeedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *durationSecondsArray;
/** The number of items in @c durationSecondsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger durationSecondsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *waitSecondsArray;
/** The number of items in @c waitSecondsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger waitSecondsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *transitionSecondsArray;
/** The number of items in @c transitionSecondsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transitionSecondsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *angleDegreeArray;
/** The number of items in @c angleDegreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger angleDegreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *angleOffsetDegreeArray;
/** The number of items in @c angleOffsetDegreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger angleOffsetDegreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *pitchDegreeArray;
/** The number of items in @c pitchDegreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pitchDegreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *pitchOffsetDegreeArray;
/** The number of items in @c pitchOffsetDegreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pitchOffsetDegreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *rollDegreeArray;
/** The number of items in @c rollDegreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rollDegreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *distanceMetersArray;
/** The number of items in @c distanceMetersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger distanceMetersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *heightPercentArray;
/** The number of items in @c heightPercentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger heightPercentArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *vertCtrRatioArray;
/** The number of items in @c vertCtrRatioArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger vertCtrRatioArray_Count;

@end

#pragma mark - EncounterSettings

typedef GPB_ENUM(EncounterSettings_FieldNumber) {
  EncounterSettings_FieldNumber_SpinBonusThreshold = 1,
  EncounterSettings_FieldNumber_ExcellentThrowThreshold = 2,
  EncounterSettings_FieldNumber_GreatThrowThreshold = 3,
  EncounterSettings_FieldNumber_NiceThrowThreshold = 4,
  EncounterSettings_FieldNumber_MilestoneThreshold = 5,
};

@interface EncounterSettings : GPBMessage

@property(nonatomic, readwrite) float spinBonusThreshold;

@property(nonatomic, readwrite) float excellentThrowThreshold;

@property(nonatomic, readwrite) float greatThrowThreshold;

@property(nonatomic, readwrite) float niceThrowThreshold;

@property(nonatomic, readwrite) int32_t milestoneThreshold;

@end

#pragma mark - EquippedBadgeSettings

typedef GPB_ENUM(EquippedBadgeSettings_FieldNumber) {
  EquippedBadgeSettings_FieldNumber_EquipBadgeCooldownMs = 1,
  EquippedBadgeSettings_FieldNumber_CatchProbabilityBonusArray = 2,
  EquippedBadgeSettings_FieldNumber_FleeProbabilityBonusArray = 3,
};

@interface EquippedBadgeSettings : GPBMessage

@property(nonatomic, readwrite) int64_t equipBadgeCooldownMs;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *catchProbabilityBonusArray;
/** The number of items in @c catchProbabilityBonusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger catchProbabilityBonusArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *fleeProbabilityBonusArray;
/** The number of items in @c fleeProbabilityBonusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fleeProbabilityBonusArray_Count;

@end

#pragma mark - FormSettings

typedef GPB_ENUM(FormSettings_FieldNumber) {
  FormSettings_FieldNumber_Pokemon = 1,
  FormSettings_FieldNumber_FormsArray = 2,
};

@interface FormSettings : GPBMessage

@property(nonatomic, readwrite) enum PokemonId pokemon;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FormSettings_Form*> *formsArray;
/** The number of items in @c formsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger formsArray_Count;

@end

/**
 * Fetches the raw value of a @c FormSettings's @c pokemon property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FormSettings_Pokemon_RawValue(FormSettings *message);
/**
 * Sets the raw value of an @c FormSettings's @c pokemon property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFormSettings_Pokemon_RawValue(FormSettings *message, int32_t value);

#pragma mark - FormSettings_Form

typedef GPB_ENUM(FormSettings_Form_FieldNumber) {
  FormSettings_Form_FieldNumber_Form = 1,
  FormSettings_Form_FieldNumber_AssetBundleValue = 2,
};

@interface FormSettings_Form : GPBMessage

@property(nonatomic, readwrite) enum Form form;

@property(nonatomic, readwrite) int32_t assetBundleValue;

@end

/**
 * Fetches the raw value of a @c FormSettings_Form's @c form property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FormSettings_Form_Form_RawValue(FormSettings_Form *message);
/**
 * Sets the raw value of an @c FormSettings_Form's @c form property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFormSettings_Form_Form_RawValue(FormSettings_Form *message, int32_t value);

#pragma mark - GenderSettings

typedef GPB_ENUM(GenderSettings_FieldNumber) {
  GenderSettings_FieldNumber_Pokemon = 1,
  GenderSettings_FieldNumber_Gender = 2,
};

@interface GenderSettings : GPBMessage

@property(nonatomic, readwrite) enum PokemonId pokemon;

@property(nonatomic, readwrite, strong, null_resettable) PokemonGenderSettings *gender;
/** Test to see if @c gender has been set. */
@property(nonatomic, readwrite) BOOL hasGender;

@end

/**
 * Fetches the raw value of a @c GenderSettings's @c pokemon property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GenderSettings_Pokemon_RawValue(GenderSettings *message);
/**
 * Sets the raw value of an @c GenderSettings's @c pokemon property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGenderSettings_Pokemon_RawValue(GenderSettings *message, int32_t value);

#pragma mark - GymBattleSettings

typedef GPB_ENUM(GymBattleSettings_FieldNumber) {
  GymBattleSettings_FieldNumber_EnergyPerSec = 1,
  GymBattleSettings_FieldNumber_DodgeEnergyCost = 2,
  GymBattleSettings_FieldNumber_RetargetSeconds = 3,
  GymBattleSettings_FieldNumber_EnemyAttackInterval = 4,
  GymBattleSettings_FieldNumber_AttackServerInterval = 5,
  GymBattleSettings_FieldNumber_RoundDurationSeconds = 6,
  GymBattleSettings_FieldNumber_BonusTimePerAllySeconds = 7,
  GymBattleSettings_FieldNumber_MaximumAttackersPerBattle = 8,
  GymBattleSettings_FieldNumber_SameTypeAttackBonusMultiplier = 9,
  GymBattleSettings_FieldNumber_MaximumEnergy = 10,
  GymBattleSettings_FieldNumber_EnergyDeltaPerHealthLost = 11,
  GymBattleSettings_FieldNumber_DodgeDurationMs = 12,
  GymBattleSettings_FieldNumber_MinimumPlayerLevel = 13,
  GymBattleSettings_FieldNumber_SwapDurationMs = 14,
  GymBattleSettings_FieldNumber_DodgeDamageReductionPercent = 15,
};

@interface GymBattleSettings : GPBMessage

@property(nonatomic, readwrite) float energyPerSec;

@property(nonatomic, readwrite) float dodgeEnergyCost;

@property(nonatomic, readwrite) float retargetSeconds;

@property(nonatomic, readwrite) float enemyAttackInterval;

@property(nonatomic, readwrite) float attackServerInterval;

@property(nonatomic, readwrite) float roundDurationSeconds;

@property(nonatomic, readwrite) float bonusTimePerAllySeconds;

@property(nonatomic, readwrite) int32_t maximumAttackersPerBattle;

@property(nonatomic, readwrite) float sameTypeAttackBonusMultiplier;

@property(nonatomic, readwrite) int32_t maximumEnergy;

@property(nonatomic, readwrite) float energyDeltaPerHealthLost;

@property(nonatomic, readwrite) int32_t dodgeDurationMs;

@property(nonatomic, readwrite) int32_t minimumPlayerLevel;

@property(nonatomic, readwrite) int32_t swapDurationMs;

@property(nonatomic, readwrite) float dodgeDamageReductionPercent;

@end

#pragma mark - GymLevelSettings

typedef GPB_ENUM(GymLevelSettings_FieldNumber) {
  GymLevelSettings_FieldNumber_RequiredExperienceArray = 1,
  GymLevelSettings_FieldNumber_LeaderSlotsArray = 2,
  GymLevelSettings_FieldNumber_TrainerSlotsArray = 3,
  GymLevelSettings_FieldNumber_SearchRollBonusArray = 4,
};

@interface GymLevelSettings : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *requiredExperienceArray;
/** The number of items in @c requiredExperienceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requiredExperienceArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *leaderSlotsArray;
/** The number of items in @c leaderSlotsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger leaderSlotsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *trainerSlotsArray;
/** The number of items in @c trainerSlotsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trainerSlotsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *searchRollBonusArray;
/** The number of items in @c searchRollBonusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger searchRollBonusArray_Count;

@end

#pragma mark - IapItemDisplay

typedef GPB_ENUM(IapItemDisplay_FieldNumber) {
  IapItemDisplay_FieldNumber_Sku = 1,
  IapItemDisplay_FieldNumber_Category = 2,
  IapItemDisplay_FieldNumber_SortOrder = 3,
  IapItemDisplay_FieldNumber_ItemIdsArray = 4,
  IapItemDisplay_FieldNumber_CountsArray = 5,
};

@interface IapItemDisplay : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sku;

@property(nonatomic, readwrite) enum HoloIapItemCategory category;

@property(nonatomic, readwrite) int32_t sortOrder;

// |itemIdsArray| contains |ItemId|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *itemIdsArray;
/** The number of items in @c itemIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *countsArray;
/** The number of items in @c countsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger countsArray_Count;

@end

/**
 * Fetches the raw value of a @c IapItemDisplay's @c category property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IapItemDisplay_Category_RawValue(IapItemDisplay *message);
/**
 * Sets the raw value of an @c IapItemDisplay's @c category property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIapItemDisplay_Category_RawValue(IapItemDisplay *message, int32_t value);

#pragma mark - IapSettings

typedef GPB_ENUM(IapSettings_FieldNumber) {
  IapSettings_FieldNumber_DailyBonusCoins = 1,
  IapSettings_FieldNumber_DailyDefenderBonusPerPokemonArray = 2,
  IapSettings_FieldNumber_DailyDefenderBonusMaxDefenders = 3,
  IapSettings_FieldNumber_DailyDefenderBonusCurrencyArray = 4,
  IapSettings_FieldNumber_MinTimeBetweenClaimsMs = 5,
  IapSettings_FieldNumber_DailyBonusEnabled = 6,
  IapSettings_FieldNumber_DailyDefenderBonusEnabled = 7,
};

@interface IapSettings : GPBMessage

@property(nonatomic, readwrite) int32_t dailyBonusCoins;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dailyDefenderBonusPerPokemonArray;
/** The number of items in @c dailyDefenderBonusPerPokemonArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dailyDefenderBonusPerPokemonArray_Count;

@property(nonatomic, readwrite) int32_t dailyDefenderBonusMaxDefenders;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *dailyDefenderBonusCurrencyArray;
/** The number of items in @c dailyDefenderBonusCurrencyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dailyDefenderBonusCurrencyArray_Count;

@property(nonatomic, readwrite) int64_t minTimeBetweenClaimsMs;

@property(nonatomic, readwrite) BOOL dailyBonusEnabled;

@property(nonatomic, readwrite) BOOL dailyDefenderBonusEnabled;

@end

#pragma mark - ItemSettings

typedef GPB_ENUM(ItemSettings_FieldNumber) {
  ItemSettings_FieldNumber_ItemId = 1,
  ItemSettings_FieldNumber_ItemType = 2,
  ItemSettings_FieldNumber_Category = 3,
  ItemSettings_FieldNumber_DropFreq = 4,
  ItemSettings_FieldNumber_DropTrainerLevel = 5,
  ItemSettings_FieldNumber_Pokeball = 6,
  ItemSettings_FieldNumber_Potion = 7,
  ItemSettings_FieldNumber_Revive = 8,
  ItemSettings_FieldNumber_Battle = 9,
  ItemSettings_FieldNumber_Food = 10,
  ItemSettings_FieldNumber_InventoryUpgrade = 11,
  ItemSettings_FieldNumber_XpBoost = 12,
  ItemSettings_FieldNumber_Incense = 13,
  ItemSettings_FieldNumber_EggIncubator = 14,
  ItemSettings_FieldNumber_FortModifier = 15,
};

@interface ItemSettings : GPBMessage

@property(nonatomic, readwrite) enum ItemId itemId;

@property(nonatomic, readwrite) enum ItemType itemType;

@property(nonatomic, readwrite) enum ItemCategory category;

@property(nonatomic, readwrite) float dropFreq;

@property(nonatomic, readwrite) int32_t dropTrainerLevel;

@property(nonatomic, readwrite, strong, null_resettable) PokeballAttributes *pokeball;
/** Test to see if @c pokeball has been set. */
@property(nonatomic, readwrite) BOOL hasPokeball;

@property(nonatomic, readwrite, strong, null_resettable) PotionAttributes *potion;
/** Test to see if @c potion has been set. */
@property(nonatomic, readwrite) BOOL hasPotion;

@property(nonatomic, readwrite, strong, null_resettable) ReviveAttributes *revive;
/** Test to see if @c revive has been set. */
@property(nonatomic, readwrite) BOOL hasRevive;

@property(nonatomic, readwrite, strong, null_resettable) BattleAttributes *battle;
/** Test to see if @c battle has been set. */
@property(nonatomic, readwrite) BOOL hasBattle;

@property(nonatomic, readwrite, strong, null_resettable) FoodAttributes *food;
/** Test to see if @c food has been set. */
@property(nonatomic, readwrite) BOOL hasFood;

@property(nonatomic, readwrite, strong, null_resettable) InventoryUpgradeAttributes *inventoryUpgrade;
/** Test to see if @c inventoryUpgrade has been set. */
@property(nonatomic, readwrite) BOOL hasInventoryUpgrade;

@property(nonatomic, readwrite, strong, null_resettable) ExperienceBoostAttributes *xpBoost;
/** Test to see if @c xpBoost has been set. */
@property(nonatomic, readwrite) BOOL hasXpBoost;

@property(nonatomic, readwrite, strong, null_resettable) IncenseAttributes *incense;
/** Test to see if @c incense has been set. */
@property(nonatomic, readwrite) BOOL hasIncense;

@property(nonatomic, readwrite, strong, null_resettable) EggIncubatorAttributes *eggIncubator;
/** Test to see if @c eggIncubator has been set. */
@property(nonatomic, readwrite) BOOL hasEggIncubator;

@property(nonatomic, readwrite, strong, null_resettable) FortModifierAttributes *fortModifier;
/** Test to see if @c fortModifier has been set. */
@property(nonatomic, readwrite) BOOL hasFortModifier;

@end

/**
 * Fetches the raw value of a @c ItemSettings's @c itemId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ItemSettings_ItemId_RawValue(ItemSettings *message);
/**
 * Sets the raw value of an @c ItemSettings's @c itemId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetItemSettings_ItemId_RawValue(ItemSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c ItemSettings's @c itemType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ItemSettings_ItemType_RawValue(ItemSettings *message);
/**
 * Sets the raw value of an @c ItemSettings's @c itemType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetItemSettings_ItemType_RawValue(ItemSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c ItemSettings's @c category property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ItemSettings_Category_RawValue(ItemSettings *message);
/**
 * Sets the raw value of an @c ItemSettings's @c category property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetItemSettings_Category_RawValue(ItemSettings *message, int32_t value);

#pragma mark - MoveSequenceSettings

typedef GPB_ENUM(MoveSequenceSettings_FieldNumber) {
  MoveSequenceSettings_FieldNumber_SequenceArray = 1,
};

@interface MoveSequenceSettings : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *sequenceArray;
/** The number of items in @c sequenceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sequenceArray_Count;

@end

#pragma mark - MoveSettings

typedef GPB_ENUM(MoveSettings_FieldNumber) {
  MoveSettings_FieldNumber_MovementId = 1,
  MoveSettings_FieldNumber_AnimationId = 2,
  MoveSettings_FieldNumber_PokemonType = 3,
  MoveSettings_FieldNumber_Power = 4,
  MoveSettings_FieldNumber_AccuracyChance = 5,
  MoveSettings_FieldNumber_CriticalChance = 6,
  MoveSettings_FieldNumber_HealScalar = 7,
  MoveSettings_FieldNumber_StaminaLossScalar = 8,
  MoveSettings_FieldNumber_TrainerLevelMin = 9,
  MoveSettings_FieldNumber_TrainerLevelMax = 10,
  MoveSettings_FieldNumber_VfxName = 11,
  MoveSettings_FieldNumber_DurationMs = 12,
  MoveSettings_FieldNumber_DamageWindowStartMs = 13,
  MoveSettings_FieldNumber_DamageWindowEndMs = 14,
  MoveSettings_FieldNumber_EnergyDelta = 15,
};

@interface MoveSettings : GPBMessage

@property(nonatomic, readwrite) enum PokemonMove movementId;

@property(nonatomic, readwrite) int32_t animationId;

@property(nonatomic, readwrite) enum PokemonType pokemonType;

@property(nonatomic, readwrite) float power;

@property(nonatomic, readwrite) float accuracyChance;

@property(nonatomic, readwrite) float criticalChance;

@property(nonatomic, readwrite) float healScalar;

@property(nonatomic, readwrite) float staminaLossScalar;

@property(nonatomic, readwrite) int32_t trainerLevelMin;

@property(nonatomic, readwrite) int32_t trainerLevelMax;

@property(nonatomic, readwrite, copy, null_resettable) NSString *vfxName;

@property(nonatomic, readwrite) int32_t durationMs;

@property(nonatomic, readwrite) int32_t damageWindowStartMs;

@property(nonatomic, readwrite) int32_t damageWindowEndMs;

@property(nonatomic, readwrite) int32_t energyDelta;

@end

/**
 * Fetches the raw value of a @c MoveSettings's @c movementId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MoveSettings_MovementId_RawValue(MoveSettings *message);
/**
 * Sets the raw value of an @c MoveSettings's @c movementId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMoveSettings_MovementId_RawValue(MoveSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c MoveSettings's @c pokemonType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MoveSettings_PokemonType_RawValue(MoveSettings *message);
/**
 * Sets the raw value of an @c MoveSettings's @c pokemonType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMoveSettings_PokemonType_RawValue(MoveSettings *message, int32_t value);

#pragma mark - PlayerLevelSettings

typedef GPB_ENUM(PlayerLevelSettings_FieldNumber) {
  PlayerLevelSettings_FieldNumber_RankNumArray = 1,
  PlayerLevelSettings_FieldNumber_RequiredExperienceArray = 2,
  PlayerLevelSettings_FieldNumber_CpMultiplierArray = 3,
  PlayerLevelSettings_FieldNumber_MaxEggPlayerLevel = 4,
  PlayerLevelSettings_FieldNumber_MaxEncounterPlayerLevel = 5,
};

@interface PlayerLevelSettings : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *rankNumArray;
/** The number of items in @c rankNumArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankNumArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *requiredExperienceArray;
/** The number of items in @c requiredExperienceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requiredExperienceArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *cpMultiplierArray;
/** The number of items in @c cpMultiplierArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cpMultiplierArray_Count;

@property(nonatomic, readwrite) int32_t maxEggPlayerLevel;

@property(nonatomic, readwrite) int32_t maxEncounterPlayerLevel;

@end

#pragma mark - PokemonSettings

typedef GPB_ENUM(PokemonSettings_FieldNumber) {
  PokemonSettings_FieldNumber_PokemonId = 1,
  PokemonSettings_FieldNumber_ModelScale = 3,
  PokemonSettings_FieldNumber_Type = 4,
  PokemonSettings_FieldNumber_Type2 = 5,
  PokemonSettings_FieldNumber_Camera = 6,
  PokemonSettings_FieldNumber_Encounter = 7,
  PokemonSettings_FieldNumber_Stats = 8,
  PokemonSettings_FieldNumber_QuickMovesArray = 9,
  PokemonSettings_FieldNumber_CinematicMovesArray = 10,
  PokemonSettings_FieldNumber_AnimationTimeArray = 11,
  PokemonSettings_FieldNumber_EvolutionIdsArray = 12,
  PokemonSettings_FieldNumber_EvolutionPips = 13,
  PokemonSettings_FieldNumber_Rarity = 14,
  PokemonSettings_FieldNumber_PokedexHeightM = 15,
  PokemonSettings_FieldNumber_PokedexWeightKg = 16,
  PokemonSettings_FieldNumber_ParentPokemonId = 17,
  PokemonSettings_FieldNumber_HeightStdDev = 18,
  PokemonSettings_FieldNumber_WeightStdDev = 19,
  PokemonSettings_FieldNumber_KmDistanceToHatch = 20,
  PokemonSettings_FieldNumber_FamilyId = 21,
  PokemonSettings_FieldNumber_CandyToEvolve = 22,
  PokemonSettings_FieldNumber_KmBuddyDistance = 23,
  PokemonSettings_FieldNumber_BuddySize = 24,
  PokemonSettings_FieldNumber_ModelHeight = 25,
  PokemonSettings_FieldNumber_EvolutionBranchArray = 26,
};

@interface PokemonSettings : GPBMessage

@property(nonatomic, readwrite) enum PokemonId pokemonId;

@property(nonatomic, readwrite) float modelScale;

@property(nonatomic, readwrite) enum PokemonType type;

@property(nonatomic, readwrite) enum PokemonType type2;

@property(nonatomic, readwrite, strong, null_resettable) CameraAttributes *camera;
/** Test to see if @c camera has been set. */
@property(nonatomic, readwrite) BOOL hasCamera;

@property(nonatomic, readwrite, strong, null_resettable) EncounterAttributes *encounter;
/** Test to see if @c encounter has been set. */
@property(nonatomic, readwrite) BOOL hasEncounter;

@property(nonatomic, readwrite, strong, null_resettable) StatsAttributes *stats;
/** Test to see if @c stats has been set. */
@property(nonatomic, readwrite) BOOL hasStats;

// |quickMovesArray| contains |PokemonMove|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *quickMovesArray;
/** The number of items in @c quickMovesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger quickMovesArray_Count;

// |cinematicMovesArray| contains |PokemonMove|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *cinematicMovesArray;
/** The number of items in @c cinematicMovesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cinematicMovesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *animationTimeArray;
/** The number of items in @c animationTimeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger animationTimeArray_Count;

// |evolutionIdsArray| contains |PokemonId|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *evolutionIdsArray;
/** The number of items in @c evolutionIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger evolutionIdsArray_Count;

@property(nonatomic, readwrite) int32_t evolutionPips;

@property(nonatomic, readwrite) enum PokemonRarity rarity;

@property(nonatomic, readwrite) float pokedexHeightM;

@property(nonatomic, readwrite) float pokedexWeightKg;

@property(nonatomic, readwrite) enum PokemonId parentPokemonId;

@property(nonatomic, readwrite) float heightStdDev;

@property(nonatomic, readwrite) float weightStdDev;

@property(nonatomic, readwrite) float kmDistanceToHatch;

@property(nonatomic, readwrite) enum PokemonFamilyId familyId;

@property(nonatomic, readwrite) int32_t candyToEvolve;

@property(nonatomic, readwrite) float kmBuddyDistance;

@property(nonatomic, readwrite) PokemonSettings_BuddySize buddySize;

@property(nonatomic, readwrite) float modelHeight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EvolutionBranch*> *evolutionBranchArray;
/** The number of items in @c evolutionBranchArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger evolutionBranchArray_Count;

@end

/**
 * Fetches the raw value of a @c PokemonSettings's @c pokemonId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_PokemonId_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c pokemonId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_PokemonId_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_Type_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_Type_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c type2 property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_Type2_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c type2 property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_Type2_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c rarity property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_Rarity_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c rarity property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_Rarity_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c parentPokemonId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_ParentPokemonId_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c parentPokemonId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_ParentPokemonId_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c familyId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_FamilyId_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c familyId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_FamilyId_RawValue(PokemonSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c PokemonSettings's @c buddySize property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PokemonSettings_BuddySize_RawValue(PokemonSettings *message);
/**
 * Sets the raw value of an @c PokemonSettings's @c buddySize property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPokemonSettings_BuddySize_RawValue(PokemonSettings *message, int32_t value);

#pragma mark - PokemonUpgradeSettings

typedef GPB_ENUM(PokemonUpgradeSettings_FieldNumber) {
  PokemonUpgradeSettings_FieldNumber_UpgradesPerLevel = 1,
  PokemonUpgradeSettings_FieldNumber_AllowedLevelsAbovePlayer = 2,
  PokemonUpgradeSettings_FieldNumber_CandyCostArray = 3,
  PokemonUpgradeSettings_FieldNumber_StardustCostArray = 4,
};

@interface PokemonUpgradeSettings : GPBMessage

@property(nonatomic, readwrite) int32_t upgradesPerLevel;

@property(nonatomic, readwrite) int32_t allowedLevelsAbovePlayer;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *candyCostArray;
/** The number of items in @c candyCostArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger candyCostArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *stardustCostArray;
/** The number of items in @c stardustCostArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stardustCostArray_Count;

@end

#pragma mark - QuestSettings

typedef GPB_ENUM(QuestSettings_FieldNumber) {
  QuestSettings_FieldNumber_QuestType = 1,
  QuestSettings_FieldNumber_DailyQuest = 2,
};

@interface QuestSettings : GPBMessage

@property(nonatomic, readwrite) enum QuestType questType;

@property(nonatomic, readwrite, strong, null_resettable) DailyQuestSettings *dailyQuest;
/** Test to see if @c dailyQuest has been set. */
@property(nonatomic, readwrite) BOOL hasDailyQuest;

@end

/**
 * Fetches the raw value of a @c QuestSettings's @c questType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t QuestSettings_QuestType_RawValue(QuestSettings *message);
/**
 * Sets the raw value of an @c QuestSettings's @c questType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetQuestSettings_QuestType_RawValue(QuestSettings *message, int32_t value);

#pragma mark - TypeEffectiveSettings

typedef GPB_ENUM(TypeEffectiveSettings_FieldNumber) {
  TypeEffectiveSettings_FieldNumber_AttackScalarArray = 1,
  TypeEffectiveSettings_FieldNumber_AttackType = 2,
};

@interface TypeEffectiveSettings : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *attackScalarArray;
/** The number of items in @c attackScalarArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attackScalarArray_Count;

@property(nonatomic, readwrite) enum PokemonType attackType;

@end

/**
 * Fetches the raw value of a @c TypeEffectiveSettings's @c attackType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TypeEffectiveSettings_AttackType_RawValue(TypeEffectiveSettings *message);
/**
 * Sets the raw value of an @c TypeEffectiveSettings's @c attackType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTypeEffectiveSettings_AttackType_RawValue(TypeEffectiveSettings *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
