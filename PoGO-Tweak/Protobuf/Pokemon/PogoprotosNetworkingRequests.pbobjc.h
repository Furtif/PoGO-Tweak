// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Networking.Requests.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RequestType

typedef GPB_ENUM(RequestType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RequestType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** No implementation required */
  RequestType_MethodUnset = 0,

  /** Implemented [R & M] */
  RequestType_GetPlayer = 2,

  /** Implemented [R & M] */
  RequestType_GetInventory = 4,

  /** Implemented [R & M] */
  RequestType_DownloadSettings = 5,

  /** Implemented [R & M] */
  RequestType_DownloadItemTemplates = 6,

  /** Implemented [R & M] */
  RequestType_DownloadRemoteConfigVersion = 7,

  /** Implemented [R & M] */
  RequestType_RegisterBackgroundDevice = 8,

  /** Implemented [R & M] */
  RequestType_FortSearch = 101,

  /** Implemented [R & M] */
  RequestType_Encounter = 102,

  /** Implemented [R & M] */
  RequestType_CatchPokemon = 103,

  /** Implemented [R & M] */
  RequestType_FortDetails = 104,

  /** Implemented [R & M] */
  RequestType_GetMapObjects = 106,

  /** Implemented [R & M] */
  RequestType_FortDeployPokemon = 110,

  /** Implemented [R & M] */
  RequestType_FortRecallPokemon = 111,

  /** Implemented [R & M] */
  RequestType_ReleasePokemon = 112,

  /** Implemented [R & M] */
  RequestType_UseItemPotion = 113,

  /** Implemented [R & M] */
  RequestType_UseItemCapture = 114,

  /** Can't find this one */
  RequestType_UseItemFlee = 115,

  /** Implemented [R & M] */
  RequestType_UseItemRevive = 116,

  /** Implemented [R & M] */
  RequestType_GetPlayerProfile = 121,

  /** Implemented [R & M] */
  RequestType_EvolvePokemon = 125,

  /** Implemented [R & M] */
  RequestType_GetHatchedEggs = 126,

  /** Implemented [R & M] */
  RequestType_EncounterTutorialComplete = 127,

  /** Implemented [R & M] */
  RequestType_LevelUpRewards = 128,

  /** Implemented [R & M] */
  RequestType_CheckAwardedBadges = 129,

  /** Removed */
  RequestType_UseItemGym = 133,

  /** Removed */
  RequestType_GetGymDetails = 134,

  /** Removed */
  RequestType_StartGymBattle = 135,

  /** Removed */
  RequestType_AttackGym = 136,

  /** Implemented [R & M] */
  RequestType_RecycleInventoryItem = 137,

  /** Implemented [R & M] */
  RequestType_CollectDailyBonus = 138,

  /** Implemented [R & M] */
  RequestType_UseItemXpBoost = 139,

  /** Implemented [R & M] */
  RequestType_UseItemEggIncubator = 140,

  /** Implemented [R & M] */
  RequestType_UseIncense = 141,

  /** Implemented [R & M] */
  RequestType_GetIncensePokemon = 142,

  /** Implemented [R & M] */
  RequestType_IncenseEncounter = 143,

  /** Implemented [R & M] */
  RequestType_AddFortModifier = 144,

  /** Implemented [R & M] */
  RequestType_DiskEncounter = 145,

  /** Removed */
  RequestType_CollectDailyDefenderBonus = 146,

  /** Implemented [R & M] */
  RequestType_UpgradePokemon = 147,

  /** Implemented [R & M] */
  RequestType_SetFavoritePokemon = 148,

  /** Implemented [R & M] */
  RequestType_NicknamePokemon = 149,

  /** Implemented [R & M] */
  RequestType_EquipBadge = 150,

  /** Implemented [R & M] */
  RequestType_SetContactSettings = 151,

  /** Implemented [R & M] */
  RequestType_SetBuddyPokemon = 152,

  /** Implemented [R & M] */
  RequestType_GetBuddyWalked = 153,

  /** Implemented [R & M] */
  RequestType_UseItemEncounter = 154,

  /** Implemented [R & M] */
  RequestType_GymDeploy = 155,

  /** Implemented [R & M] */
  RequestType_GymGetInfo = 156,

  /** Not yet released. */
  RequestType_GymStartSession = 157,

  /** Not yet released. */
  RequestType_GymBattleAttack = 158,

  /** Not yet released. */
  RequestType_JoinLobby = 159,

  /** Not yet released. */
  RequestType_LeaveLobby = 160,

  /** Not yet released. */
  RequestType_SetLobbyVisibility = 161,

  /** Not yet released. */
  RequestType_SetLobbyPokemon = 162,

  /** Not yet released. */
  RequestType_GetRaidDetails = 163,

  /** Implemented [R & M] */
  RequestType_GymFeedPokemon = 164,

  /** Not yet released. */
  RequestType_StartRaidBattle = 165,

  /** Not yet released. */
  RequestType_AttackRaid = 166,

  /** Implemented [R & M] */
  RequestType_GetAssetDigest = 300,

  /** Implemented [R & M] */
  RequestType_GetDownloadUrls = 301,

  /** Implemented [R & M] */
  RequestType_ClaimCodename = 403,

  /** Implemented [R & M] */
  RequestType_SetAvatar = 404,

  /** Implemented [R & M] */
  RequestType_SetPlayerTeam = 405,

  /** Implemented [R & M] */
  RequestType_MarkTutorialComplete = 406,

  /** Implemented [R & M] */
  RequestType_CheckChallenge = 600,

  /** Implemented [R & M] */
  RequestType_VerifyChallenge = 601,

  /** Implemented [R & M] */
  RequestType_Echo = 666,

  /** Implemented [R & M] */
  RequestType_SfidaRegistration = 800,

  /** Implemented [R & M] */
  RequestType_SfidaActionLog = 801,

  /** Not yet released. */
  RequestType_SfidaCertification = 802,

  /** Not yet released. */
  RequestType_SfidaUpdate = 803,

  /** Not yet released. */
  RequestType_SfidaAction = 804,

  /** Not yet released. */
  RequestType_SfidaDowser = 805,

  /** Not yet released. */
  RequestType_SfidaCapture = 806,

  /** Implemented [R & M] */
  RequestType_ListAvatarCustomizations = 807,

  /** Implemented [R & M] */
  RequestType_SetAvatarItemAsViewed = 808,

  /** Implemented [R & M] */
  RequestType_GetInbox = 809,

  /** Implemented [R & M] */
  RequestType_ListGymBadges = 811,

  /** Implemented [R & M] */
  RequestType_GetGymBadgeDetails = 812,

  /** Implemented [R & M] */
  RequestType_UseItemMoveReroll = 813,

  /** Implemented [R & M] */
  RequestType_UseItemRareCandy = 814,
  RequestType_RegisterPushNotification = 5000,
  RequestType_UnregisterPushNotification = 5001,
  RequestType_UpdateNotificationStatus = 5002,
  RequestType_OptOutPushNotificationCategory = 5003,
};

GPBEnumDescriptor *RequestType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RequestType_IsValidValue(int32_t value);

#pragma mark - PogoprotosNetworkingRequestsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PogoprotosNetworkingRequestsRoot : GPBRootObject
@end

#pragma mark - Request

typedef GPB_ENUM(Request_FieldNumber) {
  Request_FieldNumber_RequestType = 1,
  Request_FieldNumber_RequestMessage = 2,
};

@interface Request : GPBMessage

@property(nonatomic, readwrite) RequestType requestType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *requestMessage;

@end

/**
 * Fetches the raw value of a @c Request's @c requestType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Request_RequestType_RawValue(Request *message);
/**
 * Sets the raw value of an @c Request's @c requestType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequest_RequestType_RawValue(Request *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
