// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Networking.Platform.Responses.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "PogoprotosNetworkingPlatformResponses.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PogoprotosNetworkingPlatformResponsesRoot

@implementation PogoprotosNetworkingPlatformResponsesRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor

static GPBFileDescriptor *PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Networking.Platform.Responses"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - BuyItemAndroidResponse

@implementation BuyItemAndroidResponse

@dynamic result;
@dynamic purchaseToken;

typedef struct BuyItemAndroidResponse__storage_ {
  uint32_t _has_storage_[1];
  BuyItemAndroidResponse_Status result;
  NSString *purchaseToken;
} BuyItemAndroidResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = BuyItemAndroidResponse_Status_EnumDescriptor,
        .number = BuyItemAndroidResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BuyItemAndroidResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "purchaseToken",
        .dataTypeSpecific.className = NULL,
        .number = BuyItemAndroidResponse_FieldNumber_PurchaseToken,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BuyItemAndroidResponse__storage_, purchaseToken),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BuyItemAndroidResponse class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BuyItemAndroidResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t BuyItemAndroidResponse_Result_RawValue(BuyItemAndroidResponse *message) {
  GPBDescriptor *descriptor = [BuyItemAndroidResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:BuyItemAndroidResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetBuyItemAndroidResponse_Result_RawValue(BuyItemAndroidResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [BuyItemAndroidResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:BuyItemAndroidResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum BuyItemAndroidResponse_Status

GPBEnumDescriptor *BuyItemAndroidResponse_Status_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Success\000";
    static const int32_t values[] = {
        BuyItemAndroidResponse_Status_Unknown,
        BuyItemAndroidResponse_Status_Success,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(BuyItemAndroidResponse_Status)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:BuyItemAndroidResponse_Status_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL BuyItemAndroidResponse_Status_IsValidValue(int32_t value__) {
  switch (value__) {
    case BuyItemAndroidResponse_Status_Unknown:
    case BuyItemAndroidResponse_Status_Success:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - BuyItemPokeCoinsResponse

@implementation BuyItemPokeCoinsResponse

@dynamic result;

typedef struct BuyItemPokeCoinsResponse__storage_ {
  uint32_t _has_storage_[1];
  BuyItemPokeCoinsResponse_Status result;
} BuyItemPokeCoinsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "result",
        .dataTypeSpecific.enumDescFunc = BuyItemPokeCoinsResponse_Status_EnumDescriptor,
        .number = BuyItemPokeCoinsResponse_FieldNumber_Result,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BuyItemPokeCoinsResponse__storage_, result),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BuyItemPokeCoinsResponse class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BuyItemPokeCoinsResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t BuyItemPokeCoinsResponse_Result_RawValue(BuyItemPokeCoinsResponse *message) {
  GPBDescriptor *descriptor = [BuyItemPokeCoinsResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:BuyItemPokeCoinsResponse_FieldNumber_Result];
  return GPBGetMessageInt32Field(message, field);
}

void SetBuyItemPokeCoinsResponse_Result_RawValue(BuyItemPokeCoinsResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [BuyItemPokeCoinsResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:BuyItemPokeCoinsResponse_FieldNumber_Result];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum BuyItemPokeCoinsResponse_Status

GPBEnumDescriptor *BuyItemPokeCoinsResponse_Status_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Success\000NotEnoughPokecoins\000";
    static const int32_t values[] = {
        BuyItemPokeCoinsResponse_Status_Unknown,
        BuyItemPokeCoinsResponse_Status_Success,
        BuyItemPokeCoinsResponse_Status_NotEnoughPokecoins,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(BuyItemPokeCoinsResponse_Status)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:BuyItemPokeCoinsResponse_Status_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL BuyItemPokeCoinsResponse_Status_IsValidValue(int32_t value__) {
  switch (value__) {
    case BuyItemPokeCoinsResponse_Status_Unknown:
    case BuyItemPokeCoinsResponse_Status_Success:
    case BuyItemPokeCoinsResponse_Status_NotEnoughPokecoins:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - GetStoreItemsResponse

@implementation GetStoreItemsResponse

@dynamic status;
@dynamic itemsArray, itemsArray_Count;
@dynamic playerCurrenciesArray, playerCurrenciesArray_Count;
@dynamic hash_p;

typedef struct GetStoreItemsResponse__storage_ {
  uint32_t _has_storage_[1];
  GetStoreItemsResponse_Status status;
  NSMutableArray *itemsArray;
  NSMutableArray *playerCurrenciesArray;
  NSString *hash_p;
} GetStoreItemsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "status",
        .dataTypeSpecific.enumDescFunc = GetStoreItemsResponse_Status_EnumDescriptor,
        .number = GetStoreItemsResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "itemsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(GetStoreItemsResponse_StoreItem),
        .number = GetStoreItemsResponse_FieldNumber_ItemsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse__storage_, itemsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "playerCurrenciesArray",
        .dataTypeSpecific.className = GPBStringifySymbol(Currency),
        .number = GetStoreItemsResponse_FieldNumber_PlayerCurrenciesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse__storage_, playerCurrenciesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hash_p",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_FieldNumber_Hash_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse__storage_, hash_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetStoreItemsResponse class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetStoreItemsResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetStoreItemsResponse_Status_RawValue(GetStoreItemsResponse *message) {
  GPBDescriptor *descriptor = [GetStoreItemsResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetStoreItemsResponse_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetStoreItemsResponse_Status_RawValue(GetStoreItemsResponse *message, int32_t value) {
  GPBDescriptor *descriptor = [GetStoreItemsResponse descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetStoreItemsResponse_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum GetStoreItemsResponse_Status

GPBEnumDescriptor *GetStoreItemsResponse_Status_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Undefined\000Okay\000";
    static const int32_t values[] = {
        GetStoreItemsResponse_Status_Undefined,
        GetStoreItemsResponse_Status_Okay,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(GetStoreItemsResponse_Status)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:GetStoreItemsResponse_Status_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL GetStoreItemsResponse_Status_IsValidValue(int32_t value__) {
  switch (value__) {
    case GetStoreItemsResponse_Status_Undefined:
    case GetStoreItemsResponse_Status_Okay:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - GetStoreItemsResponse_StoreItem

@implementation GetStoreItemsResponse_StoreItem

@dynamic itemId;
@dynamic isIap;
@dynamic hasCurrencyToBuy, currencyToBuy;
@dynamic hasYieldsCurrency, yieldsCurrency;
@dynamic hasYieldsItem, yieldsItem;
@dynamic tagsArray, tagsArray_Count;
@dynamic unknown7;

typedef struct GetStoreItemsResponse_StoreItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t unknown7;
  NSString *itemId;
  Currency *currencyToBuy;
  Currency *yieldsCurrency;
  GetStoreItemsResponse_StoreItemInfo *yieldsItem;
  NSMutableArray *tagsArray;
} GetStoreItemsResponse_StoreItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "itemId",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_ItemId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, itemId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isIap",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_IsIap,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "currencyToBuy",
        .dataTypeSpecific.className = GPBStringifySymbol(Currency),
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_CurrencyToBuy,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, currencyToBuy),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "yieldsCurrency",
        .dataTypeSpecific.className = GPBStringifySymbol(Currency),
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_YieldsCurrency,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, yieldsCurrency),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "yieldsItem",
        .dataTypeSpecific.className = GPBStringifySymbol(GetStoreItemsResponse_StoreItemInfo),
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_YieldsItem,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, yieldsItem),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tagsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(GetStoreItemsResponse_StoreTags),
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unknown7",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreItem_FieldNumber_Unknown7,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItem__storage_, unknown7),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetStoreItemsResponse_StoreItem class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetStoreItemsResponse_StoreItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(GetStoreItemsResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetStoreItemsResponse_StoreTags

@implementation GetStoreItemsResponse_StoreTags

@dynamic tag;
@dynamic value;

typedef struct GetStoreItemsResponse_StoreTags__storage_ {
  uint32_t _has_storage_[1];
  NSString *tag;
  NSString *value;
} GetStoreItemsResponse_StoreTags__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tag",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreTags_FieldNumber_Tag,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreTags__storage_, tag),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreTags_FieldNumber_Value,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreTags__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetStoreItemsResponse_StoreTags class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetStoreItemsResponse_StoreTags__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(GetStoreItemsResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetStoreItemsResponse_StoreItemInfo

@implementation GetStoreItemsResponse_StoreItemInfo

@dynamic itemId;
@dynamic count;

typedef struct GetStoreItemsResponse_StoreItemInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t count;
  NSString *itemId;
} GetStoreItemsResponse_StoreItemInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "itemId",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreItemInfo_FieldNumber_ItemId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItemInfo__storage_, itemId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = GetStoreItemsResponse_StoreItemInfo_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetStoreItemsResponse_StoreItemInfo__storage_, count),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetStoreItemsResponse_StoreItemInfo class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetStoreItemsResponse_StoreItemInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(GetStoreItemsResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendEncryptedSignatureResponse

@implementation SendEncryptedSignatureResponse

@dynamic received;

typedef struct SendEncryptedSignatureResponse__storage_ {
  uint32_t _has_storage_[1];
} SendEncryptedSignatureResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "received",
        .dataTypeSpecific.className = NULL,
        .number = SendEncryptedSignatureResponse_FieldNumber_Received,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendEncryptedSignatureResponse class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendEncryptedSignatureResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UnknownPtr8Response

@implementation UnknownPtr8Response

@dynamic message;

typedef struct UnknownPtr8Response__storage_ {
  uint32_t _has_storage_[1];
  NSString *message;
} UnknownPtr8Response__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = UnknownPtr8Response_FieldNumber_Message,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UnknownPtr8Response__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UnknownPtr8Response class]
                                     rootClass:[PogoprotosNetworkingPlatformResponsesRoot class]
                                          file:PogoprotosNetworkingPlatformResponsesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UnknownPtr8Response__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
