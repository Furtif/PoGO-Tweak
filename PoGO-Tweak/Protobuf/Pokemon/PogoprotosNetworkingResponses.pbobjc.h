// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Networking.Responses.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

 #import "PogoprotosDataBattle.pbobjc.h"
 #import "PogoprotosDataCapture.pbobjc.h"
 #import "PogoprotosEnums.pbobjc.h"
 #import "PogoprotosData.pbobjc.h"
 #import "PogoprotosInventoryItem.pbobjc.h"
 #import "PogoprotosSettingsMaster.pbobjc.h"
 #import "PogoprotosSettings.pbobjc.h"
 #import "PogoprotosMapPokemon.pbobjc.h"
 #import "PogoprotosDataPlayer.pbobjc.h"
 #import "PogoprotosDataGym.pbobjc.h"
 #import "PogoprotosDataRaid.pbobjc.h"
 #import "PogoprotosMapFort.pbobjc.h"
 #import "PogoprotosInventory.pbobjc.h"
 #import "PogoprotosDataBadge.pbobjc.h"
 #import "PogoprotosMap.pbobjc.h"
 #import "PogoprotosDataAvatar.pbobjc.h"
 #import "PogoprotosDataLogs.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ActionLogEntry;
@class AppliedItem;
@class AppliedItems;
@class AssetDigestEntry;
@class AvatarCustomization;
@class AvatarCustomizationSettings;
@class AwardedGymBadge;
@class BackgroundToken;
@class BadgeSettings;
@class Battle;
@class BattleLog;
@class BattleParticipant;
@class BattlePokemonInfo;
@class BattleUpdate;
@class BuddyPokemon;
@class CameraSettings;
@class CaptureAward;
@class CaptureProbability;
@class DownloadItemTemplatesResponse_ItemTemplate;
@class DownloadUrlEntry;
@class EggIncubator;
@class EncounterSettings;
@class EquippedBadge;
@class EquippedBadgeSettings;
@class EventInfo;
@class FormSettings;
@class FortDetailsResponse;
@class FortModifier;
@class GenderSettings;
@class GetInboxResponse_ClientInbox;
@class GetInboxResponse_ClientInbox_Notification;
@class GetInboxResponse_ClientInbox_TemplateVariable;
@class GetPlayerProfileResponse_GymBadges;
@class GlobalSettings;
@class GymBadgeGmtSettings;
@class GymBattleSettings;
@class GymDefender;
@class GymLevelSettings;
@class GymState;
@class GymStatusAndDefenders;
@class IapItemDisplay;
@class IapSettings;
@class InventoryDelta;
@class ItemAward;
@class ItemSettings;
@class Loot;
@class MapCell;
@class MoveSequenceSettings;
@class MoveSettings;
@class PlayerBadge;
@class PlayerData;
@class PlayerLevelSettings;
@class PokemonData;
@class PokemonDisplay;
@class PokemonSettings;
@class PokemonUpgradeSettings;
@class QuestSettings;
@class TypeEffectiveSettings;
@class WildPokemon;
GPB_ENUM_FWD_DECLARE(FortType);
GPB_ENUM_FWD_DECLARE(ItemId);
GPB_ENUM_FWD_DECLARE(MapObjectsStatus);
GPB_ENUM_FWD_DECLARE(NotificationState);
GPB_ENUM_FWD_DECLARE(PokemonFamilyId);
GPB_ENUM_FWD_DECLARE(PokemonId);
GPB_ENUM_FWD_DECLARE(TeamColor);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AddFortModifierResponse_Result

typedef GPB_ENUM(AddFortModifierResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AddFortModifierResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AddFortModifierResponse_Result_NoResultSet = 0,
  AddFortModifierResponse_Result_Success = 1,
  AddFortModifierResponse_Result_FortAlreadyHasModifier = 2,
  AddFortModifierResponse_Result_TooFarAway = 3,
  AddFortModifierResponse_Result_NoItemInInventory = 4,
  AddFortModifierResponse_Result_PoiInaccessible = 5,
};

GPBEnumDescriptor *AddFortModifierResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AddFortModifierResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum AttackGymResponse_Result

typedef GPB_ENUM(AttackGymResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AttackGymResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AttackGymResponse_Result_Unset = 0,
  AttackGymResponse_Result_Success = 1,
  AttackGymResponse_Result_ErrorInvalidAttackActions = 2,
  AttackGymResponse_Result_ErrorNotInRange = 3,
};

GPBEnumDescriptor *AttackGymResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AttackGymResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum AttackRaidResponse_Result

typedef GPB_ENUM(AttackRaidResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AttackRaidResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AttackRaidResponse_Result_Unset = 0,
  AttackRaidResponse_Result_Success = 1,
  AttackRaidResponse_Result_ErrorGymNotFound = 2,
  AttackRaidResponse_Result_ErrorBattleNotFound = 3,
  AttackRaidResponse_Result_ErrorInvalidAttackActions = 4,
  AttackRaidResponse_Result_ErrorNotPartOfBattle = 5,
  AttackRaidResponse_Result_ErrorBattleIdNotRaid = 6,
};

GPBEnumDescriptor *AttackRaidResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AttackRaidResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum CatchPokemonResponse_CatchStatus

typedef GPB_ENUM(CatchPokemonResponse_CatchStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CatchPokemonResponse_CatchStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CatchPokemonResponse_CatchStatus_CatchError = 0,
  CatchPokemonResponse_CatchStatus_CatchSuccess = 1,
  CatchPokemonResponse_CatchStatus_CatchEscape = 2,
  CatchPokemonResponse_CatchStatus_CatchFlee = 3,
  CatchPokemonResponse_CatchStatus_CatchMissed = 4,
};

GPBEnumDescriptor *CatchPokemonResponse_CatchStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CatchPokemonResponse_CatchStatus_IsValidValue(int32_t value);

#pragma mark - Enum CatchPokemonResponse_CaptureReason

typedef GPB_ENUM(CatchPokemonResponse_CaptureReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CatchPokemonResponse_CaptureReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CatchPokemonResponse_CaptureReason_Unset = 0,
  CatchPokemonResponse_CaptureReason_Default = 1,
  CatchPokemonResponse_CaptureReason_ElementalBadge = 2,
  CatchPokemonResponse_CaptureReason_CriticalCatch = 3,
};

GPBEnumDescriptor *CatchPokemonResponse_CaptureReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CatchPokemonResponse_CaptureReason_IsValidValue(int32_t value);

#pragma mark - Enum CheckCodenameAvailableResponse_Status

typedef GPB_ENUM(CheckCodenameAvailableResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CheckCodenameAvailableResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CheckCodenameAvailableResponse_Status_Unset = 0,
  CheckCodenameAvailableResponse_Status_Success = 1,
  CheckCodenameAvailableResponse_Status_CodenameNotAvailable = 2,
  CheckCodenameAvailableResponse_Status_CodenameNotValid = 3,
  CheckCodenameAvailableResponse_Status_CurrentOwner = 4,
  CheckCodenameAvailableResponse_Status_CodenameChangeNotAllowed = 5,
};

GPBEnumDescriptor *CheckCodenameAvailableResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CheckCodenameAvailableResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum ClaimCodenameResponse_Status

typedef GPB_ENUM(ClaimCodenameResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClaimCodenameResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClaimCodenameResponse_Status_Unset = 0,
  ClaimCodenameResponse_Status_Success = 1,
  ClaimCodenameResponse_Status_CodenameNotAvailable = 2,
  ClaimCodenameResponse_Status_CodenameNotValid = 3,
  ClaimCodenameResponse_Status_CurrentOwner = 4,
  ClaimCodenameResponse_Status_CodenameChangeNotAllowed = 5,
};

GPBEnumDescriptor *ClaimCodenameResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClaimCodenameResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum CollectDailyBonusResponse_Result

typedef GPB_ENUM(CollectDailyBonusResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CollectDailyBonusResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CollectDailyBonusResponse_Result_Unset = 0,
  CollectDailyBonusResponse_Result_Success = 1,
  CollectDailyBonusResponse_Result_Failure = 2,
  CollectDailyBonusResponse_Result_TooSoon = 3,
};

GPBEnumDescriptor *CollectDailyBonusResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CollectDailyBonusResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum CollectDailyDefenderBonusResponse_Result

typedef GPB_ENUM(CollectDailyDefenderBonusResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CollectDailyDefenderBonusResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CollectDailyDefenderBonusResponse_Result_Unset = 0,
  CollectDailyDefenderBonusResponse_Result_Success = 1,
  CollectDailyDefenderBonusResponse_Result_Failure = 2,
  CollectDailyDefenderBonusResponse_Result_TooSoon = 3,
  CollectDailyDefenderBonusResponse_Result_NoDefenders = 4,
};

GPBEnumDescriptor *CollectDailyDefenderBonusResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CollectDailyDefenderBonusResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum DiskEncounterResponse_Result

typedef GPB_ENUM(DiskEncounterResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DiskEncounterResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DiskEncounterResponse_Result_Unknown = 0,
  DiskEncounterResponse_Result_Success = 1,
  DiskEncounterResponse_Result_NotAvailable = 2,
  DiskEncounterResponse_Result_NotInRange = 3,
  DiskEncounterResponse_Result_EncounterAlreadyFinished = 4,
  DiskEncounterResponse_Result_PokemonInventoryFull = 5,
};

GPBEnumDescriptor *DiskEncounterResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DiskEncounterResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum DownloadItemTemplatesResponse_Result

typedef GPB_ENUM(DownloadItemTemplatesResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DownloadItemTemplatesResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DownloadItemTemplatesResponse_Result_Unset = 0,
  DownloadItemTemplatesResponse_Result_Success = 1,
  DownloadItemTemplatesResponse_Result_Page = 2,
  DownloadItemTemplatesResponse_Result_Retry = 3,
};

GPBEnumDescriptor *DownloadItemTemplatesResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DownloadItemTemplatesResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum DownloadRemoteConfigVersionResponse_Result

typedef GPB_ENUM(DownloadRemoteConfigVersionResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DownloadRemoteConfigVersionResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DownloadRemoteConfigVersionResponse_Result_Unset = 0,
  DownloadRemoteConfigVersionResponse_Result_Success = 1,
};

GPBEnumDescriptor *DownloadRemoteConfigVersionResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DownloadRemoteConfigVersionResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum EncounterResponse_Background

typedef GPB_ENUM(EncounterResponse_Background) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EncounterResponse_Background_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EncounterResponse_Background_Park = 0,
  EncounterResponse_Background_Desert = 1,
};

GPBEnumDescriptor *EncounterResponse_Background_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EncounterResponse_Background_IsValidValue(int32_t value);

#pragma mark - Enum EncounterResponse_Status

typedef GPB_ENUM(EncounterResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EncounterResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EncounterResponse_Status_EncounterError = 0,
  EncounterResponse_Status_EncounterSuccess = 1,
  EncounterResponse_Status_EncounterNotFound = 2,
  EncounterResponse_Status_EncounterClosed = 3,
  EncounterResponse_Status_EncounterPokemonFled = 4,
  EncounterResponse_Status_EncounterNotInRange = 5,
  EncounterResponse_Status_EncounterAlreadyHappened = 6,
  EncounterResponse_Status_PokemonInventoryFull = 7,
};

GPBEnumDescriptor *EncounterResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EncounterResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum EncounterTutorialCompleteResponse_Result

typedef GPB_ENUM(EncounterTutorialCompleteResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EncounterTutorialCompleteResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EncounterTutorialCompleteResponse_Result_Unset = 0,
  EncounterTutorialCompleteResponse_Result_Success = 1,
  EncounterTutorialCompleteResponse_Result_ErrorInvalidPokemon = 2,
};

GPBEnumDescriptor *EncounterTutorialCompleteResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EncounterTutorialCompleteResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum EquipBadgeResponse_Result

typedef GPB_ENUM(EquipBadgeResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EquipBadgeResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EquipBadgeResponse_Result_Unset = 0,
  EquipBadgeResponse_Result_Success = 1,
  EquipBadgeResponse_Result_CooldownActive = 2,
  EquipBadgeResponse_Result_NotQualified = 3,
};

GPBEnumDescriptor *EquipBadgeResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EquipBadgeResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum EvolvePokemonResponse_Result

typedef GPB_ENUM(EvolvePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EvolvePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EvolvePokemonResponse_Result_Unset = 0,
  EvolvePokemonResponse_Result_Success = 1,
  EvolvePokemonResponse_Result_FailedPokemonMissing = 2,
  EvolvePokemonResponse_Result_FailedInsufficientResources = 3,
  EvolvePokemonResponse_Result_FailedPokemonCannotEvolve = 4,
  EvolvePokemonResponse_Result_FailedPokemonIsDeployed = 5,
  EvolvePokemonResponse_Result_FailedInvalidItemRequirement = 6,
};

GPBEnumDescriptor *EvolvePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EvolvePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum FortDeployPokemonResponse_Result

typedef GPB_ENUM(FortDeployPokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FortDeployPokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FortDeployPokemonResponse_Result_NoResultSet = 0,
  FortDeployPokemonResponse_Result_Success = 1,
  FortDeployPokemonResponse_Result_ErrorAlreadyHasPokemonOnFort = 2,
  FortDeployPokemonResponse_Result_ErrorOpposingTeamOwnsFort = 3,
  FortDeployPokemonResponse_Result_ErrorFortIsFull = 4,
  FortDeployPokemonResponse_Result_ErrorNotInRange = 5,
  FortDeployPokemonResponse_Result_ErrorPlayerHasNoTeam = 6,
  FortDeployPokemonResponse_Result_ErrorPokemonNotFullHp = 7,
  FortDeployPokemonResponse_Result_ErrorPlayerBelowMinimumLevel = 8,
  FortDeployPokemonResponse_Result_ErrorPokemonIsBuddy = 9,
  FortDeployPokemonResponse_Result_ErrorFortDeployLockout = 10,
  FortDeployPokemonResponse_Result_ErrorPlayerHasNoNickname = 11,
  FortDeployPokemonResponse_Result_ErrorPoiInaccessible = 12,
  FortDeployPokemonResponse_Result_ErrorLegendaryPokemon = 13,
  FortDeployPokemonResponse_Result_ErrorInvalidPokemon = 14,
};

GPBEnumDescriptor *FortDeployPokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FortDeployPokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum FortRecallPokemonResponse_Result

typedef GPB_ENUM(FortRecallPokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FortRecallPokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FortRecallPokemonResponse_Result_NoResultSet = 0,
  FortRecallPokemonResponse_Result_Success = 1,
  FortRecallPokemonResponse_Result_ErrorNotInRange = 2,
  FortRecallPokemonResponse_Result_ErrorPokemonNotOnFort = 3,
  FortRecallPokemonResponse_Result_ErrorNoPlayer = 4,
};

GPBEnumDescriptor *FortRecallPokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FortRecallPokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum FortSearchResponse_Result

typedef GPB_ENUM(FortSearchResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FortSearchResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FortSearchResponse_Result_NoResultSet = 0,
  FortSearchResponse_Result_Success = 1,
  FortSearchResponse_Result_OutOfRange = 2,
  FortSearchResponse_Result_InCooldownPeriod = 3,
  FortSearchResponse_Result_InventoryFull = 4,
  FortSearchResponse_Result_ExceededDailyLimit = 5,
  FortSearchResponse_Result_PoiInaccessible = 6,
};

GPBEnumDescriptor *FortSearchResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FortSearchResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GetAssetDigestResponse_Result

typedef GPB_ENUM(GetAssetDigestResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetAssetDigestResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetAssetDigestResponse_Result_Unset = 0,
  GetAssetDigestResponse_Result_Success = 1,
  GetAssetDigestResponse_Result_Page = 2,
  GetAssetDigestResponse_Result_Retry = 3,
};

GPBEnumDescriptor *GetAssetDigestResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetAssetDigestResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GetGymDetailsResponse_Result

typedef GPB_ENUM(GetGymDetailsResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetGymDetailsResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetGymDetailsResponse_Result_Unset = 0,
  GetGymDetailsResponse_Result_Success = 1,
  GetGymDetailsResponse_Result_ErrorNotInRange = 2,
};

GPBEnumDescriptor *GetGymDetailsResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetGymDetailsResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GetInboxResponse_Result

typedef GPB_ENUM(GetInboxResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetInboxResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetInboxResponse_Result_Unset = 0,
  GetInboxResponse_Result_Success = 1,
  GetInboxResponse_Result_Failure = 2,
};

GPBEnumDescriptor *GetInboxResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetInboxResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GetInboxResponse_ClientInbox_Notification_Label

typedef GPB_ENUM(GetInboxResponse_ClientInbox_Notification_Label) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetInboxResponse_ClientInbox_Notification_Label_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetInboxResponse_ClientInbox_Notification_Label_UnsetLabel = 0,
  GetInboxResponse_ClientInbox_Notification_Label_Unread = 1,
  GetInboxResponse_ClientInbox_Notification_Label_New = 2,
  GetInboxResponse_ClientInbox_Notification_Label_Immediate = 3,
};

GPBEnumDescriptor *GetInboxResponse_ClientInbox_Notification_Label_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetInboxResponse_ClientInbox_Notification_Label_IsValidValue(int32_t value);

#pragma mark - Enum GetIncensePokemonResponse_Result

typedef GPB_ENUM(GetIncensePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetIncensePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetIncensePokemonResponse_Result_IncenseEncounterUnknown = 0,
  GetIncensePokemonResponse_Result_IncenseEncounterAvailable = 1,
  GetIncensePokemonResponse_Result_IncenseEncounterNotAvailable = 2,
};

GPBEnumDescriptor *GetIncensePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetIncensePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GetMapObjectsResponse_TimeOfDay

typedef GPB_ENUM(GetMapObjectsResponse_TimeOfDay) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetMapObjectsResponse_TimeOfDay_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetMapObjectsResponse_TimeOfDay_None = 0,
  GetMapObjectsResponse_TimeOfDay_Day = 1,
  GetMapObjectsResponse_TimeOfDay_Night = 2,
};

GPBEnumDescriptor *GetMapObjectsResponse_TimeOfDay_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetMapObjectsResponse_TimeOfDay_IsValidValue(int32_t value);

#pragma mark - Enum GetPlayerProfileResponse_Result

typedef GPB_ENUM(GetPlayerProfileResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetPlayerProfileResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetPlayerProfileResponse_Result_Unset = 0,
  GetPlayerProfileResponse_Result_Success = 1,
};

GPBEnumDescriptor *GetPlayerProfileResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetPlayerProfileResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GymDeployResponse_Result

typedef GPB_ENUM(GymDeployResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GymDeployResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GymDeployResponse_Result_NoResultSet = 0,
  GymDeployResponse_Result_Success = 1,
  GymDeployResponse_Result_ErrorAlreadyHasPokemonOnFort = 2,
  GymDeployResponse_Result_ErrorOpposingTeamOwnsFort = 3,
  GymDeployResponse_Result_ErrorFortIsFull = 4,
  GymDeployResponse_Result_ErrorNotInRange = 5,
  GymDeployResponse_Result_ErrorPlayerHasNoTeam = 6,
  GymDeployResponse_Result_ErrorPokemonNotFullHp = 7,
  GymDeployResponse_Result_ErrorPlayerBelowMinimumLevel = 8,
  GymDeployResponse_Result_ErrorPokemonIsBuddy = 9,
  GymDeployResponse_Result_ErrorFortDeployLockout = 10,
  GymDeployResponse_Result_ErrorPlayerHasNoNickname = 11,
  GymDeployResponse_Result_ErrorPoiInaccessible = 12,
  GymDeployResponse_Result_ErrorNotAPokemon = 13,
  GymDeployResponse_Result_ErrorTooManyOfSameKind = 14,
  GymDeployResponse_Result_ErrorTooManyDeployed = 15,
  GymDeployResponse_Result_ErrorTeamDeployLockout = 16,
  GymDeployResponse_Result_ErrorLegendaryPokemon = 17,
  GymDeployResponse_Result_ErrorInvalidPokemon = 18,
  GymDeployResponse_Result_ErrorRaidActive = 19,
};

GPBEnumDescriptor *GymDeployResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GymDeployResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GymFeedPokemonResponse_Result

typedef GPB_ENUM(GymFeedPokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GymFeedPokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GymFeedPokemonResponse_Result_Unset = 0,
  GymFeedPokemonResponse_Result_Success = 1,
  GymFeedPokemonResponse_Result_ErrorCannotUse = 2,
  GymFeedPokemonResponse_Result_ErrorNotInRange = 3,
  GymFeedPokemonResponse_Result_ErrorPokemonNotThere = 4,
  GymFeedPokemonResponse_Result_ErrorPokemonFull = 5,
  GymFeedPokemonResponse_Result_ErrorNoBerriesLeft = 6,
  GymFeedPokemonResponse_Result_ErrorWrongTeam = 7,
  GymFeedPokemonResponse_Result_ErrorWrongCount = 8,
  GymFeedPokemonResponse_Result_ErrorTooFast = 9,
  GymFeedPokemonResponse_Result_ErrorTooFrequent = 10,
  GymFeedPokemonResponse_Result_ErrorGymBusy = 11,
  GymFeedPokemonResponse_Result_ErrorRaidActive = 12,
  GymFeedPokemonResponse_Result_ErrorGymClosed = 13,
};

GPBEnumDescriptor *GymFeedPokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GymFeedPokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum GymGetInfoResponse_Result

typedef GPB_ENUM(GymGetInfoResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GymGetInfoResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GymGetInfoResponse_Result_Unset = 0,
  GymGetInfoResponse_Result_Success = 1,
  GymGetInfoResponse_Result_ErrorNotInRange = 2,
  GymGetInfoResponse_Result_ErrorGymDisabled = 3,
};

GPBEnumDescriptor *GymGetInfoResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GymGetInfoResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum IncenseEncounterResponse_Result

typedef GPB_ENUM(IncenseEncounterResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  IncenseEncounterResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  IncenseEncounterResponse_Result_IncenseEncounterUnknown = 0,
  IncenseEncounterResponse_Result_IncenseEncounterSuccess = 1,
  IncenseEncounterResponse_Result_IncenseEncounterNotAvailable = 2,
  IncenseEncounterResponse_Result_PokemonInventoryFull = 3,
};

GPBEnumDescriptor *IncenseEncounterResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL IncenseEncounterResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum LevelUpRewardsResponse_Result

typedef GPB_ENUM(LevelUpRewardsResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LevelUpRewardsResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LevelUpRewardsResponse_Result_Unset = 0,
  LevelUpRewardsResponse_Result_Success = 1,
  LevelUpRewardsResponse_Result_AwardedAlready = 2,
};

GPBEnumDescriptor *LevelUpRewardsResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LevelUpRewardsResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum ListAvatarCustomizationsResponse_Result

typedef GPB_ENUM(ListAvatarCustomizationsResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ListAvatarCustomizationsResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ListAvatarCustomizationsResponse_Result_Unset = 0,
  ListAvatarCustomizationsResponse_Result_Success = 1,
  ListAvatarCustomizationsResponse_Result_Failure = 2,
};

GPBEnumDescriptor *ListAvatarCustomizationsResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ListAvatarCustomizationsResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum NicknamePokemonResponse_Result

typedef GPB_ENUM(NicknamePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NicknamePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  NicknamePokemonResponse_Result_Unset = 0,
  NicknamePokemonResponse_Result_Success = 1,
  NicknamePokemonResponse_Result_ErrorInvalidNickname = 2,
  NicknamePokemonResponse_Result_ErrorPokemonNotFound = 3,
  NicknamePokemonResponse_Result_ErrorPokemonIsEgg = 4,
};

GPBEnumDescriptor *NicknamePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NicknamePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum RegisterPushNotificationResponse_Result

typedef GPB_ENUM(RegisterPushNotificationResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RegisterPushNotificationResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RegisterPushNotificationResponse_Result_Unset = 0,
  RegisterPushNotificationResponse_Result_Success = 1,
  RegisterPushNotificationResponse_Result_NoChange = 2,
};

GPBEnumDescriptor *RegisterPushNotificationResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RegisterPushNotificationResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UpdateNotificationStatusResponse_NotificationState

typedef GPB_ENUM(UpdateNotificationStatusResponse_NotificationState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UpdateNotificationStatusResponse_NotificationState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UpdateNotificationStatusResponse_NotificationState_UnsetState = 0,
  UpdateNotificationStatusResponse_NotificationState_Viewed = 1,
};

GPBEnumDescriptor *UpdateNotificationStatusResponse_NotificationState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UpdateNotificationStatusResponse_NotificationState_IsValidValue(int32_t value);

#pragma mark - Enum PushNotificationRegistryResponse_Result

typedef GPB_ENUM(PushNotificationRegistryResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PushNotificationRegistryResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PushNotificationRegistryResponse_Result_Unset = 0,
  PushNotificationRegistryResponse_Result_Success = 1,
  PushNotificationRegistryResponse_Result_NoChange = 2,
};

GPBEnumDescriptor *PushNotificationRegistryResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PushNotificationRegistryResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum RecycleInventoryItemResponse_Result

typedef GPB_ENUM(RecycleInventoryItemResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RecycleInventoryItemResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RecycleInventoryItemResponse_Result_Unset = 0,
  RecycleInventoryItemResponse_Result_Success = 1,
  RecycleInventoryItemResponse_Result_ErrorNotEnoughCopies = 2,
  RecycleInventoryItemResponse_Result_ErrorCannotRecycleIncubators = 3,
};

GPBEnumDescriptor *RecycleInventoryItemResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RecycleInventoryItemResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum RegisterBackgroundDeviceResponse_Status

typedef GPB_ENUM(RegisterBackgroundDeviceResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RegisterBackgroundDeviceResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RegisterBackgroundDeviceResponse_Status_Unset = 0,
  RegisterBackgroundDeviceResponse_Status_Success = 1,
  RegisterBackgroundDeviceResponse_Status_Error = 2,
};

GPBEnumDescriptor *RegisterBackgroundDeviceResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RegisterBackgroundDeviceResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum ReleasePokemonResponse_Result

typedef GPB_ENUM(ReleasePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ReleasePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ReleasePokemonResponse_Result_Unset = 0,
  ReleasePokemonResponse_Result_Success = 1,
  ReleasePokemonResponse_Result_PokemonDeployed = 2,
  ReleasePokemonResponse_Result_Failed = 3,
  ReleasePokemonResponse_Result_ErrorPokemonIsEgg = 4,
  ReleasePokemonResponse_Result_ErrorPokemonIsBuddy = 5,
};

GPBEnumDescriptor *ReleasePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ReleasePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum SetAvatarItemAsViewedResponse_Result

typedef GPB_ENUM(SetAvatarItemAsViewedResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetAvatarItemAsViewedResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetAvatarItemAsViewedResponse_Result_Unset = 0,
  SetAvatarItemAsViewedResponse_Result_Success = 1,
  SetAvatarItemAsViewedResponse_Result_Failure = 2,
};

GPBEnumDescriptor *SetAvatarItemAsViewedResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetAvatarItemAsViewedResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum SetAvatarResponse_Status

typedef GPB_ENUM(SetAvatarResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetAvatarResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetAvatarResponse_Status_Unset = 0,
  SetAvatarResponse_Status_Success = 1,
  SetAvatarResponse_Status_AvatarAlreadySet = 2,
  SetAvatarResponse_Status_Failure = 3,
  SetAvatarResponse_Status_SlotNotAllowed = 4,
  SetAvatarResponse_Status_ItemNotOwned = 5,
  SetAvatarResponse_Status_InvalidAvatarType = 6,
};

GPBEnumDescriptor *SetAvatarResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetAvatarResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum SetBuddyPokemonResponse_Result

typedef GPB_ENUM(SetBuddyPokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetBuddyPokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetBuddyPokemonResponse_Result_Unest = 0,
  SetBuddyPokemonResponse_Result_Success = 1,
  SetBuddyPokemonResponse_Result_ErrorPokemonDeployed = 2,
  SetBuddyPokemonResponse_Result_ErrorPokemonNotOwned = 3,
  SetBuddyPokemonResponse_Result_ErrorPokemonIsEgg = 4,
  SetBuddyPokemonResponse_Result_ErrorInvalidPokemon = 5,
};

GPBEnumDescriptor *SetBuddyPokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetBuddyPokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum SetContactSettingsResponse_Status

typedef GPB_ENUM(SetContactSettingsResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetContactSettingsResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetContactSettingsResponse_Status_Unset = 0,
  SetContactSettingsResponse_Status_Success = 1,
  SetContactSettingsResponse_Status_Failure = 2,
};

GPBEnumDescriptor *SetContactSettingsResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetContactSettingsResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum SetFavoritePokemonResponse_Result

typedef GPB_ENUM(SetFavoritePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetFavoritePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetFavoritePokemonResponse_Result_Unset = 0,
  SetFavoritePokemonResponse_Result_Success = 1,
  SetFavoritePokemonResponse_Result_ErrorPokemonNotFound = 2,
  SetFavoritePokemonResponse_Result_ErrorPokemonIsEgg = 3,
};

GPBEnumDescriptor *SetFavoritePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetFavoritePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum SetPlayerTeamResponse_Status

typedef GPB_ENUM(SetPlayerTeamResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SetPlayerTeamResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SetPlayerTeamResponse_Status_Unset = 0,
  SetPlayerTeamResponse_Status_Success = 1,
  SetPlayerTeamResponse_Status_TeamAlreadySet = 2,
  SetPlayerTeamResponse_Status_Failure = 3,
};

GPBEnumDescriptor *SetPlayerTeamResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SetPlayerTeamResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum SfidaActionLogResponse_Result

typedef GPB_ENUM(SfidaActionLogResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SfidaActionLogResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SfidaActionLogResponse_Result_Unset = 0,
  SfidaActionLogResponse_Result_Success = 1,
};

GPBEnumDescriptor *SfidaActionLogResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SfidaActionLogResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum StartGymBattleResponse_Result

typedef GPB_ENUM(StartGymBattleResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  StartGymBattleResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  StartGymBattleResponse_Result_Unset = 0,
  StartGymBattleResponse_Result_Success = 1,
  StartGymBattleResponse_Result_ErrorGymNotFound = 2,
  StartGymBattleResponse_Result_ErrorGymNeutral = 3,
  StartGymBattleResponse_Result_ErrorGymWrongTeam = 4,
  StartGymBattleResponse_Result_ErrorGymEmpty = 5,
  StartGymBattleResponse_Result_ErrorInvalidDefender = 6,
  StartGymBattleResponse_Result_ErrorTrainingInvalidAttackerCount = 7,
  StartGymBattleResponse_Result_ErrorAllPokemonFainted = 8,
  StartGymBattleResponse_Result_ErrorTooManyBattles = 9,
  StartGymBattleResponse_Result_ErrorTooManyPlayers = 10,
  StartGymBattleResponse_Result_ErrorGymBattleLockout = 11,
  StartGymBattleResponse_Result_ErrorPlayerBelowMinimumLevel = 12,
  StartGymBattleResponse_Result_ErrorNotInRange = 13,
  StartGymBattleResponse_Result_ErrorPoiInaccessible = 14,
};

GPBEnumDescriptor *StartGymBattleResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StartGymBattleResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UpgradePokemonResponse_Result

typedef GPB_ENUM(UpgradePokemonResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UpgradePokemonResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UpgradePokemonResponse_Result_Unset = 0,
  UpgradePokemonResponse_Result_Success = 1,
  UpgradePokemonResponse_Result_ErrorPokemonNotFound = 2,
  UpgradePokemonResponse_Result_ErrorInsufficientResources = 3,
  UpgradePokemonResponse_Result_ErrorUpgradeNotAvailable = 4,
  UpgradePokemonResponse_Result_ErrorPokemonIsDeployed = 5,
};

GPBEnumDescriptor *UpgradePokemonResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UpgradePokemonResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseIncenseResponse_Result

typedef GPB_ENUM(UseIncenseResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseIncenseResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseIncenseResponse_Result_Unknown = 0,
  UseIncenseResponse_Result_Success = 1,
  UseIncenseResponse_Result_IncenseAlreadyActive = 2,
  UseIncenseResponse_Result_NoneInInventory = 3,
  UseIncenseResponse_Result_LocationUnset = 4,
};

GPBEnumDescriptor *UseIncenseResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseIncenseResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemEggIncubatorResponse_Result

typedef GPB_ENUM(UseItemEggIncubatorResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemEggIncubatorResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemEggIncubatorResponse_Result_Unset = 0,
  UseItemEggIncubatorResponse_Result_Success = 1,
  UseItemEggIncubatorResponse_Result_ErrorIncubatorNotFound = 2,
  UseItemEggIncubatorResponse_Result_ErrorPokemonEggNotFound = 3,
  UseItemEggIncubatorResponse_Result_ErrorPokemonIdNotEgg = 4,
  UseItemEggIncubatorResponse_Result_ErrorIncubatorAlreadyInUse = 5,
  UseItemEggIncubatorResponse_Result_ErrorPokemonAlreadyIncubating = 6,
  UseItemEggIncubatorResponse_Result_ErrorIncubatorNoUsesRemaining = 7,
};

GPBEnumDescriptor *UseItemEggIncubatorResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemEggIncubatorResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemEncounterResponse_Status

typedef GPB_ENUM(UseItemEncounterResponse_Status) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemEncounterResponse_Status_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemEncounterResponse_Status_Success = 0,
  UseItemEncounterResponse_Status_AlreadyCompleted = 1,
  UseItemEncounterResponse_Status_ActiveItemExists = 2,
  UseItemEncounterResponse_Status_NoItemInInventory = 3,
  UseItemEncounterResponse_Status_InvalidItemCategory = 4,
};

GPBEnumDescriptor *UseItemEncounterResponse_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemEncounterResponse_Status_IsValidValue(int32_t value);

#pragma mark - Enum UseItemGymResponse_Result

typedef GPB_ENUM(UseItemGymResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemGymResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemGymResponse_Result_Unset = 0,
  UseItemGymResponse_Result_Success = 1,
  UseItemGymResponse_Result_ErrorCannotUse = 2,
  UseItemGymResponse_Result_ErrorNotInRange = 3,
};

GPBEnumDescriptor *UseItemGymResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemGymResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemMoveRerollResponse_Result

typedef GPB_ENUM(UseItemMoveRerollResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemMoveRerollResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemMoveRerollResponse_Result_Unset = 0,
  UseItemMoveRerollResponse_Result_Success = 1,
  UseItemMoveRerollResponse_Result_NoPokemon = 2,
  UseItemMoveRerollResponse_Result_NoOtherMoves = 3,
  UseItemMoveRerollResponse_Result_NoPlayer = 4,
  UseItemMoveRerollResponse_Result_WrongItemType = 5,
  UseItemMoveRerollResponse_Result_ItemNotInInventory = 6,
  UseItemMoveRerollResponse_Result_InvalidPokemon = 7,
};

GPBEnumDescriptor *UseItemMoveRerollResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemMoveRerollResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemPotionResponse_Result

typedef GPB_ENUM(UseItemPotionResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemPotionResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemPotionResponse_Result_Unset = 0,
  UseItemPotionResponse_Result_Success = 1,
  UseItemPotionResponse_Result_ErrorNoPokemon = 2,
  UseItemPotionResponse_Result_ErrorCannotUse = 3,
  UseItemPotionResponse_Result_ErrorDeployedToFort = 4,
};

GPBEnumDescriptor *UseItemPotionResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemPotionResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemRareCandyResponse_Result

typedef GPB_ENUM(UseItemRareCandyResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemRareCandyResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemRareCandyResponse_Result_Unset = 0,
  UseItemRareCandyResponse_Result_Success = 1,
  UseItemRareCandyResponse_Result_InvalidPokemonId = 2,
  UseItemRareCandyResponse_Result_NoPlayer = 3,
  UseItemRareCandyResponse_Result_WrongItemType = 4,
  UseItemRareCandyResponse_Result_ItemNotInInventory = 5,
};

GPBEnumDescriptor *UseItemRareCandyResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemRareCandyResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemReviveResponse_Result

typedef GPB_ENUM(UseItemReviveResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemReviveResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemReviveResponse_Result_Unset = 0,
  UseItemReviveResponse_Result_Success = 1,
  UseItemReviveResponse_Result_ErrorNoPokemon = 2,
  UseItemReviveResponse_Result_ErrorCannotUse = 3,
  UseItemReviveResponse_Result_ErrorDeployedToFort = 4,
};

GPBEnumDescriptor *UseItemReviveResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemReviveResponse_Result_IsValidValue(int32_t value);

#pragma mark - Enum UseItemXpBoostResponse_Result

typedef GPB_ENUM(UseItemXpBoostResponse_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UseItemXpBoostResponse_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UseItemXpBoostResponse_Result_Unset = 0,
  UseItemXpBoostResponse_Result_Success = 1,
  UseItemXpBoostResponse_Result_ErrorInvalidItemType = 2,
  UseItemXpBoostResponse_Result_ErrorXpBoostAlreadyActive = 3,
  UseItemXpBoostResponse_Result_ErrorNoItemsRemaining = 4,
  UseItemXpBoostResponse_Result_ErrorLocationUnset = 5,
};

GPBEnumDescriptor *UseItemXpBoostResponse_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UseItemXpBoostResponse_Result_IsValidValue(int32_t value);

#pragma mark - PogoprotosNetworkingResponsesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PogoprotosNetworkingResponsesRoot : GPBRootObject
@end

#pragma mark - AddFortModifierResponse

typedef GPB_ENUM(AddFortModifierResponse_FieldNumber) {
  AddFortModifierResponse_FieldNumber_Result = 1,
  AddFortModifierResponse_FieldNumber_FortDetails = 2,
};

@interface AddFortModifierResponse : GPBMessage

@property(nonatomic, readwrite) AddFortModifierResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) FortDetailsResponse *fortDetails;
/** Test to see if @c fortDetails has been set. */
@property(nonatomic, readwrite) BOOL hasFortDetails;

@end

/**
 * Fetches the raw value of a @c AddFortModifierResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AddFortModifierResponse_Result_RawValue(AddFortModifierResponse *message);
/**
 * Sets the raw value of an @c AddFortModifierResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAddFortModifierResponse_Result_RawValue(AddFortModifierResponse *message, int32_t value);

#pragma mark - AttackGymResponse

typedef GPB_ENUM(AttackGymResponse_FieldNumber) {
  AttackGymResponse_FieldNumber_Result = 1,
  AttackGymResponse_FieldNumber_BattleLog = 2,
  AttackGymResponse_FieldNumber_BattleId = 3,
  AttackGymResponse_FieldNumber_ActiveDefender = 4,
  AttackGymResponse_FieldNumber_ActiveAttacker = 5,
  AttackGymResponse_FieldNumber_BattleUpdate = 6,
};

@interface AttackGymResponse : GPBMessage

@property(nonatomic, readwrite) AttackGymResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) BattleLog *battleLog;
/** Test to see if @c battleLog has been set. */
@property(nonatomic, readwrite) BOOL hasBattleLog;

@property(nonatomic, readwrite, copy, null_resettable) NSString *battleId;

@property(nonatomic, readwrite, strong, null_resettable) BattlePokemonInfo *activeDefender;
/** Test to see if @c activeDefender has been set. */
@property(nonatomic, readwrite) BOOL hasActiveDefender;

@property(nonatomic, readwrite, strong, null_resettable) BattlePokemonInfo *activeAttacker;
/** Test to see if @c activeAttacker has been set. */
@property(nonatomic, readwrite) BOOL hasActiveAttacker;

@property(nonatomic, readwrite, strong, null_resettable) BattleUpdate *battleUpdate;
/** Test to see if @c battleUpdate has been set. */
@property(nonatomic, readwrite) BOOL hasBattleUpdate;

@end

/**
 * Fetches the raw value of a @c AttackGymResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AttackGymResponse_Result_RawValue(AttackGymResponse *message);
/**
 * Sets the raw value of an @c AttackGymResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAttackGymResponse_Result_RawValue(AttackGymResponse *message, int32_t value);

#pragma mark - AttackRaidResponse

typedef GPB_ENUM(AttackRaidResponse_FieldNumber) {
  AttackRaidResponse_FieldNumber_Result = 1,
  AttackRaidResponse_FieldNumber_BattleUpdate = 2,
};

@interface AttackRaidResponse : GPBMessage

@property(nonatomic, readwrite) AttackRaidResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) BattleUpdate *battleUpdate;
/** Test to see if @c battleUpdate has been set. */
@property(nonatomic, readwrite) BOOL hasBattleUpdate;

@end

/**
 * Fetches the raw value of a @c AttackRaidResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AttackRaidResponse_Result_RawValue(AttackRaidResponse *message);
/**
 * Sets the raw value of an @c AttackRaidResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAttackRaidResponse_Result_RawValue(AttackRaidResponse *message, int32_t value);

#pragma mark - CatchPokemonResponse

typedef GPB_ENUM(CatchPokemonResponse_FieldNumber) {
  CatchPokemonResponse_FieldNumber_Status = 1,
  CatchPokemonResponse_FieldNumber_MissPercent = 2,
  CatchPokemonResponse_FieldNumber_CapturedPokemonId = 3,
  CatchPokemonResponse_FieldNumber_CaptureAward = 4,
  CatchPokemonResponse_FieldNumber_CaptureReason = 5,
  CatchPokemonResponse_FieldNumber_DisplayPokedexId = 6,
  CatchPokemonResponse_FieldNumber_ThrowsRemaining = 7,
};

@interface CatchPokemonResponse : GPBMessage

@property(nonatomic, readwrite) CatchPokemonResponse_CatchStatus status;

@property(nonatomic, readwrite) double missPercent;

@property(nonatomic, readwrite) uint64_t capturedPokemonId;

@property(nonatomic, readwrite, strong, null_resettable) CaptureAward *captureAward;
/** Test to see if @c captureAward has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureAward;

@property(nonatomic, readwrite) CatchPokemonResponse_CaptureReason captureReason;

@property(nonatomic, readwrite) int32_t displayPokedexId;

@property(nonatomic, readwrite) int32_t throwsRemaining;

@end

/**
 * Fetches the raw value of a @c CatchPokemonResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CatchPokemonResponse_Status_RawValue(CatchPokemonResponse *message);
/**
 * Sets the raw value of an @c CatchPokemonResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCatchPokemonResponse_Status_RawValue(CatchPokemonResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c CatchPokemonResponse's @c captureReason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CatchPokemonResponse_CaptureReason_RawValue(CatchPokemonResponse *message);
/**
 * Sets the raw value of an @c CatchPokemonResponse's @c captureReason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCatchPokemonResponse_CaptureReason_RawValue(CatchPokemonResponse *message, int32_t value);

#pragma mark - CheckAwardedBadgesResponse

typedef GPB_ENUM(CheckAwardedBadgesResponse_FieldNumber) {
  CheckAwardedBadgesResponse_FieldNumber_Success = 1,
  CheckAwardedBadgesResponse_FieldNumber_AwardedBadgesArray = 2,
  CheckAwardedBadgesResponse_FieldNumber_AwardedBadgeLevelsArray = 3,
  CheckAwardedBadgesResponse_FieldNumber_AvatarTemplateIdsArray = 4,
};

@interface CheckAwardedBadgesResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

// |awardedBadgesArray| contains |BadgeType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *awardedBadgesArray;
/** The number of items in @c awardedBadgesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardedBadgesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *awardedBadgeLevelsArray;
/** The number of items in @c awardedBadgeLevelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardedBadgeLevelsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *avatarTemplateIdsArray;
/** The number of items in @c avatarTemplateIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger avatarTemplateIdsArray_Count;

@end

#pragma mark - CheckChallengeResponse

typedef GPB_ENUM(CheckChallengeResponse_FieldNumber) {
  CheckChallengeResponse_FieldNumber_ShowChallenge = 1,
  CheckChallengeResponse_FieldNumber_ChallengeURL = 2,
};

@interface CheckChallengeResponse : GPBMessage

@property(nonatomic, readwrite) BOOL showChallenge;

@property(nonatomic, readwrite, copy, null_resettable) NSString *challengeURL;

@end

#pragma mark - CheckCodenameAvailableResponse

typedef GPB_ENUM(CheckCodenameAvailableResponse_FieldNumber) {
  CheckCodenameAvailableResponse_FieldNumber_Codename = 1,
  CheckCodenameAvailableResponse_FieldNumber_UserMessage = 2,
  CheckCodenameAvailableResponse_FieldNumber_IsAssignable = 3,
  CheckCodenameAvailableResponse_FieldNumber_Status = 4,
};

@interface CheckCodenameAvailableResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *codename;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userMessage;

@property(nonatomic, readwrite) BOOL isAssignable;

@property(nonatomic, readwrite) CheckCodenameAvailableResponse_Status status;

@end

/**
 * Fetches the raw value of a @c CheckCodenameAvailableResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CheckCodenameAvailableResponse_Status_RawValue(CheckCodenameAvailableResponse *message);
/**
 * Sets the raw value of an @c CheckCodenameAvailableResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCheckCodenameAvailableResponse_Status_RawValue(CheckCodenameAvailableResponse *message, int32_t value);

#pragma mark - ClaimCodenameResponse

typedef GPB_ENUM(ClaimCodenameResponse_FieldNumber) {
  ClaimCodenameResponse_FieldNumber_Codename = 1,
  ClaimCodenameResponse_FieldNumber_UserMessage = 2,
  ClaimCodenameResponse_FieldNumber_IsAssignable = 3,
  ClaimCodenameResponse_FieldNumber_Status = 4,
  ClaimCodenameResponse_FieldNumber_UpdatedPlayer = 5,
};

@interface ClaimCodenameResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *codename;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userMessage;

@property(nonatomic, readwrite) BOOL isAssignable;

@property(nonatomic, readwrite) ClaimCodenameResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *updatedPlayer;
/** Test to see if @c updatedPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasUpdatedPlayer;

@end

/**
 * Fetches the raw value of a @c ClaimCodenameResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClaimCodenameResponse_Status_RawValue(ClaimCodenameResponse *message);
/**
 * Sets the raw value of an @c ClaimCodenameResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClaimCodenameResponse_Status_RawValue(ClaimCodenameResponse *message, int32_t value);

#pragma mark - CollectDailyBonusResponse

typedef GPB_ENUM(CollectDailyBonusResponse_FieldNumber) {
  CollectDailyBonusResponse_FieldNumber_Result = 1,
};

@interface CollectDailyBonusResponse : GPBMessage

@property(nonatomic, readwrite) CollectDailyBonusResponse_Result result;

@end

/**
 * Fetches the raw value of a @c CollectDailyBonusResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CollectDailyBonusResponse_Result_RawValue(CollectDailyBonusResponse *message);
/**
 * Sets the raw value of an @c CollectDailyBonusResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCollectDailyBonusResponse_Result_RawValue(CollectDailyBonusResponse *message, int32_t value);

#pragma mark - CollectDailyDefenderBonusResponse

typedef GPB_ENUM(CollectDailyDefenderBonusResponse_FieldNumber) {
  CollectDailyDefenderBonusResponse_FieldNumber_Result = 1,
  CollectDailyDefenderBonusResponse_FieldNumber_CurrencyTypeArray = 2,
  CollectDailyDefenderBonusResponse_FieldNumber_CurrencyAwardedArray = 3,
  CollectDailyDefenderBonusResponse_FieldNumber_DefendersCount = 4,
};

@interface CollectDailyDefenderBonusResponse : GPBMessage

@property(nonatomic, readwrite) CollectDailyDefenderBonusResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *currencyTypeArray;
/** The number of items in @c currencyTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger currencyTypeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *currencyAwardedArray;
/** The number of items in @c currencyAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger currencyAwardedArray_Count;

@property(nonatomic, readwrite) int32_t defendersCount;

@end

/**
 * Fetches the raw value of a @c CollectDailyDefenderBonusResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CollectDailyDefenderBonusResponse_Result_RawValue(CollectDailyDefenderBonusResponse *message);
/**
 * Sets the raw value of an @c CollectDailyDefenderBonusResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCollectDailyDefenderBonusResponse_Result_RawValue(CollectDailyDefenderBonusResponse *message, int32_t value);

#pragma mark - DiskEncounterResponse

typedef GPB_ENUM(DiskEncounterResponse_FieldNumber) {
  DiskEncounterResponse_FieldNumber_Result = 1,
  DiskEncounterResponse_FieldNumber_PokemonData = 2,
  DiskEncounterResponse_FieldNumber_CaptureProbability = 3,
  DiskEncounterResponse_FieldNumber_ActiveItem = 4,
};

@interface DiskEncounterResponse : GPBMessage

@property(nonatomic, readwrite) DiskEncounterResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonData;
/** Test to see if @c pokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonData;

@property(nonatomic, readwrite, strong, null_resettable) CaptureProbability *captureProbability;
/** Test to see if @c captureProbability has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureProbability;

@property(nonatomic, readwrite) enum ItemId activeItem;

@end

/**
 * Fetches the raw value of a @c DiskEncounterResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DiskEncounterResponse_Result_RawValue(DiskEncounterResponse *message);
/**
 * Sets the raw value of an @c DiskEncounterResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDiskEncounterResponse_Result_RawValue(DiskEncounterResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c DiskEncounterResponse's @c activeItem property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DiskEncounterResponse_ActiveItem_RawValue(DiskEncounterResponse *message);
/**
 * Sets the raw value of an @c DiskEncounterResponse's @c activeItem property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDiskEncounterResponse_ActiveItem_RawValue(DiskEncounterResponse *message, int32_t value);

#pragma mark - DownloadItemTemplatesResponse

typedef GPB_ENUM(DownloadItemTemplatesResponse_FieldNumber) {
  DownloadItemTemplatesResponse_FieldNumber_Result = 1,
  DownloadItemTemplatesResponse_FieldNumber_ItemTemplatesArray = 2,
  DownloadItemTemplatesResponse_FieldNumber_TimestampMs = 3,
  DownloadItemTemplatesResponse_FieldNumber_PageOffset = 4,
};

@interface DownloadItemTemplatesResponse : GPBMessage

@property(nonatomic, readwrite) DownloadItemTemplatesResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DownloadItemTemplatesResponse_ItemTemplate*> *itemTemplatesArray;
/** The number of items in @c itemTemplatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemTemplatesArray_Count;

@property(nonatomic, readwrite) uint64_t timestampMs;

@property(nonatomic, readwrite) int32_t pageOffset;

@end

/**
 * Fetches the raw value of a @c DownloadItemTemplatesResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DownloadItemTemplatesResponse_Result_RawValue(DownloadItemTemplatesResponse *message);
/**
 * Sets the raw value of an @c DownloadItemTemplatesResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDownloadItemTemplatesResponse_Result_RawValue(DownloadItemTemplatesResponse *message, int32_t value);

#pragma mark - DownloadItemTemplatesResponse_ItemTemplate

typedef GPB_ENUM(DownloadItemTemplatesResponse_ItemTemplate_FieldNumber) {
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TemplateId = 1,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonSettings = 2,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_ItemSettings = 3,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSettings = 4,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSequenceSettings = 5,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TypeEffective = 8,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BadgeSettings = 10,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_Camera = 11,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PlayerLevel = 12,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_GymLevel = 13,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BattleSettings = 14,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EncounterSettings = 15,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapItemDisplay = 16,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapSettings = 17,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonUpgrades = 18,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EquippedBadges = 19,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_QuestSettings = 20,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_AvatarCustomization = 21,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_FormSettings = 22,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_GenderSettings = 23,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_GymBadgeSettings = 24,
};

@interface DownloadItemTemplatesResponse_ItemTemplate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *templateId;

@property(nonatomic, readwrite, strong, null_resettable) PokemonSettings *pokemonSettings;
/** Test to see if @c pokemonSettings has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonSettings;

@property(nonatomic, readwrite, strong, null_resettable) ItemSettings *itemSettings;
/** Test to see if @c itemSettings has been set. */
@property(nonatomic, readwrite) BOOL hasItemSettings;

@property(nonatomic, readwrite, strong, null_resettable) MoveSettings *moveSettings;
/** Test to see if @c moveSettings has been set. */
@property(nonatomic, readwrite) BOOL hasMoveSettings;

@property(nonatomic, readwrite, strong, null_resettable) MoveSequenceSettings *moveSequenceSettings;
/** Test to see if @c moveSequenceSettings has been set. */
@property(nonatomic, readwrite) BOOL hasMoveSequenceSettings;

@property(nonatomic, readwrite, strong, null_resettable) TypeEffectiveSettings *typeEffective;
/** Test to see if @c typeEffective has been set. */
@property(nonatomic, readwrite) BOOL hasTypeEffective;

@property(nonatomic, readwrite, strong, null_resettable) BadgeSettings *badgeSettings;
/** Test to see if @c badgeSettings has been set. */
@property(nonatomic, readwrite) BOOL hasBadgeSettings;

@property(nonatomic, readwrite, strong, null_resettable) CameraSettings *camera;
/** Test to see if @c camera has been set. */
@property(nonatomic, readwrite) BOOL hasCamera;

@property(nonatomic, readwrite, strong, null_resettable) PlayerLevelSettings *playerLevel;
/** Test to see if @c playerLevel has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerLevel;

@property(nonatomic, readwrite, strong, null_resettable) GymLevelSettings *gymLevel;
/** Test to see if @c gymLevel has been set. */
@property(nonatomic, readwrite) BOOL hasGymLevel;

@property(nonatomic, readwrite, strong, null_resettable) GymBattleSettings *battleSettings;
/** Test to see if @c battleSettings has been set. */
@property(nonatomic, readwrite) BOOL hasBattleSettings;

@property(nonatomic, readwrite, strong, null_resettable) EncounterSettings *encounterSettings;
/** Test to see if @c encounterSettings has been set. */
@property(nonatomic, readwrite) BOOL hasEncounterSettings;

@property(nonatomic, readwrite, strong, null_resettable) IapItemDisplay *iapItemDisplay;
/** Test to see if @c iapItemDisplay has been set. */
@property(nonatomic, readwrite) BOOL hasIapItemDisplay;

@property(nonatomic, readwrite, strong, null_resettable) IapSettings *iapSettings;
/** Test to see if @c iapSettings has been set. */
@property(nonatomic, readwrite) BOOL hasIapSettings;

@property(nonatomic, readwrite, strong, null_resettable) PokemonUpgradeSettings *pokemonUpgrades;
/** Test to see if @c pokemonUpgrades has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonUpgrades;

@property(nonatomic, readwrite, strong, null_resettable) EquippedBadgeSettings *equippedBadges;
/** Test to see if @c equippedBadges has been set. */
@property(nonatomic, readwrite) BOOL hasEquippedBadges;

@property(nonatomic, readwrite, strong, null_resettable) QuestSettings *questSettings;
/** Test to see if @c questSettings has been set. */
@property(nonatomic, readwrite) BOOL hasQuestSettings;

@property(nonatomic, readwrite, strong, null_resettable) AvatarCustomizationSettings *avatarCustomization;
/** Test to see if @c avatarCustomization has been set. */
@property(nonatomic, readwrite) BOOL hasAvatarCustomization;

@property(nonatomic, readwrite, strong, null_resettable) FormSettings *formSettings;
/** Test to see if @c formSettings has been set. */
@property(nonatomic, readwrite) BOOL hasFormSettings;

@property(nonatomic, readwrite, strong, null_resettable) GenderSettings *genderSettings;
/** Test to see if @c genderSettings has been set. */
@property(nonatomic, readwrite) BOOL hasGenderSettings;

@property(nonatomic, readwrite, strong, null_resettable) GymBadgeGmtSettings *gymBadgeSettings;
/** Test to see if @c gymBadgeSettings has been set. */
@property(nonatomic, readwrite) BOOL hasGymBadgeSettings;

@end

#pragma mark - DownloadRemoteConfigVersionResponse

typedef GPB_ENUM(DownloadRemoteConfigVersionResponse_FieldNumber) {
  DownloadRemoteConfigVersionResponse_FieldNumber_Result = 1,
  DownloadRemoteConfigVersionResponse_FieldNumber_ItemTemplatesTimestampMs = 2,
  DownloadRemoteConfigVersionResponse_FieldNumber_AssetDigestTimestampMs = 3,
};

@interface DownloadRemoteConfigVersionResponse : GPBMessage

@property(nonatomic, readwrite) DownloadRemoteConfigVersionResponse_Result result;

/** Latest available? */
@property(nonatomic, readwrite) uint64_t itemTemplatesTimestampMs;

@property(nonatomic, readwrite) uint64_t assetDigestTimestampMs;

@end

/**
 * Fetches the raw value of a @c DownloadRemoteConfigVersionResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DownloadRemoteConfigVersionResponse_Result_RawValue(DownloadRemoteConfigVersionResponse *message);
/**
 * Sets the raw value of an @c DownloadRemoteConfigVersionResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDownloadRemoteConfigVersionResponse_Result_RawValue(DownloadRemoteConfigVersionResponse *message, int32_t value);

#pragma mark - DownloadSettingsResponse

typedef GPB_ENUM(DownloadSettingsResponse_FieldNumber) {
  DownloadSettingsResponse_FieldNumber_Error = 1,
  DownloadSettingsResponse_FieldNumber_Hash_p = 2,
  DownloadSettingsResponse_FieldNumber_Settings = 3,
};

@interface DownloadSettingsResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *error;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hash_p;

@property(nonatomic, readwrite, strong, null_resettable) GlobalSettings *settings;
/** Test to see if @c settings has been set. */
@property(nonatomic, readwrite) BOOL hasSettings;

@end

#pragma mark - EchoResponse

typedef GPB_ENUM(EchoResponse_FieldNumber) {
  EchoResponse_FieldNumber_Context = 1,
};

@interface EchoResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *context;

@end

#pragma mark - EncounterResponse

typedef GPB_ENUM(EncounterResponse_FieldNumber) {
  EncounterResponse_FieldNumber_WildPokemon = 1,
  EncounterResponse_FieldNumber_Background = 2,
  EncounterResponse_FieldNumber_Status = 3,
  EncounterResponse_FieldNumber_CaptureProbability = 4,
  EncounterResponse_FieldNumber_ActiveItem = 5,
};

@interface EncounterResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) WildPokemon *wildPokemon;
/** Test to see if @c wildPokemon has been set. */
@property(nonatomic, readwrite) BOOL hasWildPokemon;

@property(nonatomic, readwrite) EncounterResponse_Background background;

@property(nonatomic, readwrite) EncounterResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) CaptureProbability *captureProbability;
/** Test to see if @c captureProbability has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureProbability;

@property(nonatomic, readwrite) enum ItemId activeItem;

@end

/**
 * Fetches the raw value of a @c EncounterResponse's @c background property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EncounterResponse_Background_RawValue(EncounterResponse *message);
/**
 * Sets the raw value of an @c EncounterResponse's @c background property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEncounterResponse_Background_RawValue(EncounterResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c EncounterResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EncounterResponse_Status_RawValue(EncounterResponse *message);
/**
 * Sets the raw value of an @c EncounterResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEncounterResponse_Status_RawValue(EncounterResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c EncounterResponse's @c activeItem property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EncounterResponse_ActiveItem_RawValue(EncounterResponse *message);
/**
 * Sets the raw value of an @c EncounterResponse's @c activeItem property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEncounterResponse_ActiveItem_RawValue(EncounterResponse *message, int32_t value);

#pragma mark - EncounterTutorialCompleteResponse

typedef GPB_ENUM(EncounterTutorialCompleteResponse_FieldNumber) {
  EncounterTutorialCompleteResponse_FieldNumber_Result = 1,
  EncounterTutorialCompleteResponse_FieldNumber_PokemonData = 2,
  EncounterTutorialCompleteResponse_FieldNumber_CaptureAward = 3,
};

@interface EncounterTutorialCompleteResponse : GPBMessage

@property(nonatomic, readwrite) EncounterTutorialCompleteResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonData;
/** Test to see if @c pokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonData;

@property(nonatomic, readwrite, strong, null_resettable) CaptureAward *captureAward;
/** Test to see if @c captureAward has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureAward;

@end

/**
 * Fetches the raw value of a @c EncounterTutorialCompleteResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EncounterTutorialCompleteResponse_Result_RawValue(EncounterTutorialCompleteResponse *message);
/**
 * Sets the raw value of an @c EncounterTutorialCompleteResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEncounterTutorialCompleteResponse_Result_RawValue(EncounterTutorialCompleteResponse *message, int32_t value);

#pragma mark - EquipBadgeResponse

typedef GPB_ENUM(EquipBadgeResponse_FieldNumber) {
  EquipBadgeResponse_FieldNumber_Result = 1,
  EquipBadgeResponse_FieldNumber_Equipped = 2,
};

@interface EquipBadgeResponse : GPBMessage

@property(nonatomic, readwrite) EquipBadgeResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) EquippedBadge *equipped;
/** Test to see if @c equipped has been set. */
@property(nonatomic, readwrite) BOOL hasEquipped;

@end

/**
 * Fetches the raw value of a @c EquipBadgeResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EquipBadgeResponse_Result_RawValue(EquipBadgeResponse *message);
/**
 * Sets the raw value of an @c EquipBadgeResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEquipBadgeResponse_Result_RawValue(EquipBadgeResponse *message, int32_t value);

#pragma mark - EvolvePokemonResponse

typedef GPB_ENUM(EvolvePokemonResponse_FieldNumber) {
  EvolvePokemonResponse_FieldNumber_Result = 1,
  EvolvePokemonResponse_FieldNumber_EvolvedPokemonData = 2,
  EvolvePokemonResponse_FieldNumber_ExperienceAwarded = 3,
  EvolvePokemonResponse_FieldNumber_CandyAwarded = 4,
};

@interface EvolvePokemonResponse : GPBMessage

@property(nonatomic, readwrite) EvolvePokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *evolvedPokemonData;
/** Test to see if @c evolvedPokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasEvolvedPokemonData;

@property(nonatomic, readwrite) int32_t experienceAwarded;

@property(nonatomic, readwrite) int32_t candyAwarded;

@end

/**
 * Fetches the raw value of a @c EvolvePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EvolvePokemonResponse_Result_RawValue(EvolvePokemonResponse *message);
/**
 * Sets the raw value of an @c EvolvePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEvolvePokemonResponse_Result_RawValue(EvolvePokemonResponse *message, int32_t value);

#pragma mark - FortDeployPokemonResponse

typedef GPB_ENUM(FortDeployPokemonResponse_FieldNumber) {
  FortDeployPokemonResponse_FieldNumber_Result = 1,
  FortDeployPokemonResponse_FieldNumber_FortDetails = 2,
  FortDeployPokemonResponse_FieldNumber_PokemonData = 3,
  FortDeployPokemonResponse_FieldNumber_GymState = 4,
};

@interface FortDeployPokemonResponse : GPBMessage

@property(nonatomic, readwrite) FortDeployPokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) FortDetailsResponse *fortDetails;
/** Test to see if @c fortDetails has been set. */
@property(nonatomic, readwrite) BOOL hasFortDetails;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonData;
/** Test to see if @c pokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonData;

@property(nonatomic, readwrite, strong, null_resettable) GymState *gymState;
/** Test to see if @c gymState has been set. */
@property(nonatomic, readwrite) BOOL hasGymState;

@end

/**
 * Fetches the raw value of a @c FortDeployPokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FortDeployPokemonResponse_Result_RawValue(FortDeployPokemonResponse *message);
/**
 * Sets the raw value of an @c FortDeployPokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFortDeployPokemonResponse_Result_RawValue(FortDeployPokemonResponse *message, int32_t value);

#pragma mark - FortDetailsResponse

typedef GPB_ENUM(FortDetailsResponse_FieldNumber) {
  FortDetailsResponse_FieldNumber_FortId = 1,
  FortDetailsResponse_FieldNumber_TeamColor = 2,
  FortDetailsResponse_FieldNumber_PokemonData = 3,
  FortDetailsResponse_FieldNumber_Name = 4,
  FortDetailsResponse_FieldNumber_ImageUrlsArray = 5,
  FortDetailsResponse_FieldNumber_Fp = 6,
  FortDetailsResponse_FieldNumber_Stamina = 7,
  FortDetailsResponse_FieldNumber_MaxStamina = 8,
  FortDetailsResponse_FieldNumber_Type = 9,
  FortDetailsResponse_FieldNumber_Latitude = 10,
  FortDetailsResponse_FieldNumber_Longitude = 11,
  FortDetailsResponse_FieldNumber_Description_p = 12,
  FortDetailsResponse_FieldNumber_ModifiersArray = 13,
  FortDetailsResponse_FieldNumber_CloseSoon = 14,
  FortDetailsResponse_FieldNumber_CheckinImageURL = 15,
  FortDetailsResponse_FieldNumber_EventInfo = 16,
};

@interface FortDetailsResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fortId;

@property(nonatomic, readwrite) enum TeamColor teamColor;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonData;
/** Test to see if @c pokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonData;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *imageUrlsArray;
/** The number of items in @c imageUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger imageUrlsArray_Count;

@property(nonatomic, readwrite) int32_t fp;

@property(nonatomic, readwrite) int32_t stamina;

@property(nonatomic, readwrite) int32_t maxStamina;

@property(nonatomic, readwrite) enum FortType type;

@property(nonatomic, readwrite) double latitude;

@property(nonatomic, readwrite) double longitude;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FortModifier*> *modifiersArray;
/** The number of items in @c modifiersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modifiersArray_Count;

@property(nonatomic, readwrite) BOOL closeSoon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *checkinImageURL;

@property(nonatomic, readwrite, strong, null_resettable) EventInfo *eventInfo;
/** Test to see if @c eventInfo has been set. */
@property(nonatomic, readwrite) BOOL hasEventInfo;

@end

/**
 * Fetches the raw value of a @c FortDetailsResponse's @c teamColor property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FortDetailsResponse_TeamColor_RawValue(FortDetailsResponse *message);
/**
 * Sets the raw value of an @c FortDetailsResponse's @c teamColor property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFortDetailsResponse_TeamColor_RawValue(FortDetailsResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c FortDetailsResponse's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FortDetailsResponse_Type_RawValue(FortDetailsResponse *message);
/**
 * Sets the raw value of an @c FortDetailsResponse's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFortDetailsResponse_Type_RawValue(FortDetailsResponse *message, int32_t value);

#pragma mark - FortRecallPokemonResponse

typedef GPB_ENUM(FortRecallPokemonResponse_FieldNumber) {
  FortRecallPokemonResponse_FieldNumber_Result = 1,
  FortRecallPokemonResponse_FieldNumber_FortDetails = 2,
};

@interface FortRecallPokemonResponse : GPBMessage

@property(nonatomic, readwrite) FortRecallPokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) FortDetailsResponse *fortDetails;
/** Test to see if @c fortDetails has been set. */
@property(nonatomic, readwrite) BOOL hasFortDetails;

@end

/**
 * Fetches the raw value of a @c FortRecallPokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FortRecallPokemonResponse_Result_RawValue(FortRecallPokemonResponse *message);
/**
 * Sets the raw value of an @c FortRecallPokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFortRecallPokemonResponse_Result_RawValue(FortRecallPokemonResponse *message, int32_t value);

#pragma mark - FortSearchResponse

typedef GPB_ENUM(FortSearchResponse_FieldNumber) {
  FortSearchResponse_FieldNumber_Result = 1,
  FortSearchResponse_FieldNumber_ItemsAwardedArray = 2,
  FortSearchResponse_FieldNumber_GemsAwarded = 3,
  FortSearchResponse_FieldNumber_PokemonDataEgg = 4,
  FortSearchResponse_FieldNumber_ExperienceAwarded = 5,
  FortSearchResponse_FieldNumber_CooldownCompleteTimestampMs = 6,
  FortSearchResponse_FieldNumber_ChainHackSequenceNumber = 7,
  FortSearchResponse_FieldNumber_AwardedGymBadge = 8,
  FortSearchResponse_FieldNumber_Loot = 9,
  FortSearchResponse_FieldNumber_BonusLoot = 10,
  FortSearchResponse_FieldNumber_RaidTickets = 11,
  FortSearchResponse_FieldNumber_TeamBonusLoot = 12,
};

@interface FortSearchResponse : GPBMessage

@property(nonatomic, readwrite) FortSearchResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ItemAward*> *itemsAwardedArray;
/** The number of items in @c itemsAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsAwardedArray_Count;

@property(nonatomic, readwrite) int32_t gemsAwarded;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonDataEgg;
/** Test to see if @c pokemonDataEgg has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonDataEgg;

@property(nonatomic, readwrite) int32_t experienceAwarded;

@property(nonatomic, readwrite) int64_t cooldownCompleteTimestampMs;

@property(nonatomic, readwrite) int32_t chainHackSequenceNumber;

@property(nonatomic, readwrite, strong, null_resettable) AwardedGymBadge *awardedGymBadge;
/** Test to see if @c awardedGymBadge has been set. */
@property(nonatomic, readwrite) BOOL hasAwardedGymBadge;

@property(nonatomic, readwrite, strong, null_resettable) Loot *loot;
/** Test to see if @c loot has been set. */
@property(nonatomic, readwrite) BOOL hasLoot;

@property(nonatomic, readwrite, strong, null_resettable) Loot *bonusLoot;
/** Test to see if @c bonusLoot has been set. */
@property(nonatomic, readwrite) BOOL hasBonusLoot;

@property(nonatomic, readwrite) int32_t raidTickets;

@property(nonatomic, readwrite, strong, null_resettable) Loot *teamBonusLoot;
/** Test to see if @c teamBonusLoot has been set. */
@property(nonatomic, readwrite) BOOL hasTeamBonusLoot;

@end

/**
 * Fetches the raw value of a @c FortSearchResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FortSearchResponse_Result_RawValue(FortSearchResponse *message);
/**
 * Sets the raw value of an @c FortSearchResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFortSearchResponse_Result_RawValue(FortSearchResponse *message, int32_t value);

#pragma mark - GetAssetDigestResponse

typedef GPB_ENUM(GetAssetDigestResponse_FieldNumber) {
  GetAssetDigestResponse_FieldNumber_DigestArray = 1,
  GetAssetDigestResponse_FieldNumber_TimestampMs = 2,
  GetAssetDigestResponse_FieldNumber_Result = 3,
  GetAssetDigestResponse_FieldNumber_PageOffset = 4,
};

@interface GetAssetDigestResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AssetDigestEntry*> *digestArray;
/** The number of items in @c digestArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger digestArray_Count;

@property(nonatomic, readwrite) uint64_t timestampMs;

@property(nonatomic, readwrite) GetAssetDigestResponse_Result result;

@property(nonatomic, readwrite) int32_t pageOffset;

@end

/**
 * Fetches the raw value of a @c GetAssetDigestResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetAssetDigestResponse_Result_RawValue(GetAssetDigestResponse *message);
/**
 * Sets the raw value of an @c GetAssetDigestResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetAssetDigestResponse_Result_RawValue(GetAssetDigestResponse *message, int32_t value);

#pragma mark - GetBuddyWalkedResponse

typedef GPB_ENUM(GetBuddyWalkedResponse_FieldNumber) {
  GetBuddyWalkedResponse_FieldNumber_Success = 1,
  GetBuddyWalkedResponse_FieldNumber_FamilyCandyId = 2,
  GetBuddyWalkedResponse_FieldNumber_CandyEarnedCount = 3,
};

@interface GetBuddyWalkedResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite) enum PokemonFamilyId familyCandyId;

@property(nonatomic, readwrite) int32_t candyEarnedCount;

@end

/**
 * Fetches the raw value of a @c GetBuddyWalkedResponse's @c familyCandyId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetBuddyWalkedResponse_FamilyCandyId_RawValue(GetBuddyWalkedResponse *message);
/**
 * Sets the raw value of an @c GetBuddyWalkedResponse's @c familyCandyId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetBuddyWalkedResponse_FamilyCandyId_RawValue(GetBuddyWalkedResponse *message, int32_t value);

#pragma mark - GetDownloadUrlsResponse

typedef GPB_ENUM(GetDownloadUrlsResponse_FieldNumber) {
  GetDownloadUrlsResponse_FieldNumber_DownloadUrlsArray = 1,
};

@interface GetDownloadUrlsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DownloadUrlEntry*> *downloadUrlsArray;
/** The number of items in @c downloadUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger downloadUrlsArray_Count;

@end

#pragma mark - GetGymBadgeDetailsResponse

typedef GPB_ENUM(GetGymBadgeDetailsResponse_FieldNumber) {
  GetGymBadgeDetailsResponse_FieldNumber_GymBadge = 1,
  GetGymBadgeDetailsResponse_FieldNumber_GymDefender = 2,
  GetGymBadgeDetailsResponse_FieldNumber_Success = 3,
};

@interface GetGymBadgeDetailsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AwardedGymBadge *gymBadge;
/** Test to see if @c gymBadge has been set. */
@property(nonatomic, readwrite) BOOL hasGymBadge;

@property(nonatomic, readwrite, strong, null_resettable) GymDefender *gymDefender;
/** Test to see if @c gymDefender has been set. */
@property(nonatomic, readwrite) BOOL hasGymDefender;

@property(nonatomic, readwrite) BOOL success;

@end

#pragma mark - GetGymDetailsResponse

typedef GPB_ENUM(GetGymDetailsResponse_FieldNumber) {
  GetGymDetailsResponse_FieldNumber_GymState = 1,
  GetGymDetailsResponse_FieldNumber_Name = 2,
  GetGymDetailsResponse_FieldNumber_UrlsArray = 3,
  GetGymDetailsResponse_FieldNumber_Result = 4,
  GetGymDetailsResponse_FieldNumber_Description_p = 5,
  GetGymDetailsResponse_FieldNumber_SecondaryURLArray = 6,
  GetGymDetailsResponse_FieldNumber_CheckinImageURL = 7,
  GetGymDetailsResponse_FieldNumber_EventInfo = 8,
};

@interface GetGymDetailsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GymState *gymState;
/** Test to see if @c gymState has been set. */
@property(nonatomic, readwrite) BOOL hasGymState;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *urlsArray;
/** The number of items in @c urlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger urlsArray_Count;

@property(nonatomic, readwrite) GetGymDetailsResponse_Result result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *secondaryURLArray;
/** The number of items in @c secondaryURLArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger secondaryURLArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *checkinImageURL;

@property(nonatomic, readwrite, strong, null_resettable) EventInfo *eventInfo;
/** Test to see if @c eventInfo has been set. */
@property(nonatomic, readwrite) BOOL hasEventInfo;

@end

/**
 * Fetches the raw value of a @c GetGymDetailsResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetGymDetailsResponse_Result_RawValue(GetGymDetailsResponse *message);
/**
 * Sets the raw value of an @c GetGymDetailsResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetGymDetailsResponse_Result_RawValue(GetGymDetailsResponse *message, int32_t value);

#pragma mark - GetHatchedEggsResponse

typedef GPB_ENUM(GetHatchedEggsResponse_FieldNumber) {
  GetHatchedEggsResponse_FieldNumber_Success = 1,
  GetHatchedEggsResponse_FieldNumber_PokemonIdArray = 2,
  GetHatchedEggsResponse_FieldNumber_ExperienceAwardedArray = 3,
  GetHatchedEggsResponse_FieldNumber_CandyAwardedArray = 4,
  GetHatchedEggsResponse_FieldNumber_StardustAwardedArray = 5,
  GetHatchedEggsResponse_FieldNumber_EggKmWalkedArray = 6,
  GetHatchedEggsResponse_FieldNumber_HatchedPokemonArray = 7,
};

@interface GetHatchedEggsResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *pokemonIdArray;
/** The number of items in @c pokemonIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pokemonIdArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *experienceAwardedArray;
/** The number of items in @c experienceAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger experienceAwardedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *candyAwardedArray;
/** The number of items in @c candyAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger candyAwardedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *stardustAwardedArray;
/** The number of items in @c stardustAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stardustAwardedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *eggKmWalkedArray;
/** The number of items in @c eggKmWalkedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eggKmWalkedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PokemonData*> *hatchedPokemonArray;
/** The number of items in @c hatchedPokemonArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hatchedPokemonArray_Count;

@end

#pragma mark - GetInboxResponse

typedef GPB_ENUM(GetInboxResponse_FieldNumber) {
  GetInboxResponse_FieldNumber_Result = 1,
  GetInboxResponse_FieldNumber_Inbox = 2,
};

@interface GetInboxResponse : GPBMessage

@property(nonatomic, readwrite) GetInboxResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) GetInboxResponse_ClientInbox *inbox;
/** Test to see if @c inbox has been set. */
@property(nonatomic, readwrite) BOOL hasInbox;

@end

/**
 * Fetches the raw value of a @c GetInboxResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetInboxResponse_Result_RawValue(GetInboxResponse *message);
/**
 * Sets the raw value of an @c GetInboxResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetInboxResponse_Result_RawValue(GetInboxResponse *message, int32_t value);

#pragma mark - GetInboxResponse_ClientInbox

typedef GPB_ENUM(GetInboxResponse_ClientInbox_FieldNumber) {
  GetInboxResponse_ClientInbox_FieldNumber_NotificationsArray = 1,
  GetInboxResponse_ClientInbox_FieldNumber_BuiltinVariablesArray = 2,
};

@interface GetInboxResponse_ClientInbox : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GetInboxResponse_ClientInbox_Notification*> *notificationsArray;
/** The number of items in @c notificationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger notificationsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GetInboxResponse_ClientInbox_TemplateVariable*> *builtinVariablesArray;
/** The number of items in @c builtinVariablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger builtinVariablesArray_Count;

@end

#pragma mark - GetInboxResponse_ClientInbox_Notification

typedef GPB_ENUM(GetInboxResponse_ClientInbox_Notification_FieldNumber) {
  GetInboxResponse_ClientInbox_Notification_FieldNumber_NotificationId = 1,
  GetInboxResponse_ClientInbox_Notification_FieldNumber_TitleKey = 2,
  GetInboxResponse_ClientInbox_Notification_FieldNumber_Category = 3,
  GetInboxResponse_ClientInbox_Notification_FieldNumber_CreateTimestampMs = 4,
  GetInboxResponse_ClientInbox_Notification_FieldNumber_VariablesArray = 5,
  GetInboxResponse_ClientInbox_Notification_FieldNumber_LabelsArray = 6,
};

@interface GetInboxResponse_ClientInbox_Notification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *notificationId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *category;

@property(nonatomic, readwrite) int64_t createTimestampMs;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GetInboxResponse_ClientInbox_TemplateVariable*> *variablesArray;
/** The number of items in @c variablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger variablesArray_Count;

// |labelsArray| contains |GetInboxResponse_ClientInbox_Notification_Label|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *labelsArray;
/** The number of items in @c labelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger labelsArray_Count;

@end

#pragma mark - GetInboxResponse_ClientInbox_TemplateVariable

typedef GPB_ENUM(GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber) {
  GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber_Name = 1,
  GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber_Literal = 2,
  GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber_Key = 3,
  GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber_LookupTable = 4,
  GetInboxResponse_ClientInbox_TemplateVariable_FieldNumber_ByteValue = 5,
};

@interface GetInboxResponse_ClientInbox_TemplateVariable : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *literal;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lookupTable;

@property(nonatomic, readwrite, copy, null_resettable) NSData *byteValue;

@end

#pragma mark - GetIncensePokemonResponse

typedef GPB_ENUM(GetIncensePokemonResponse_FieldNumber) {
  GetIncensePokemonResponse_FieldNumber_Result = 1,
  GetIncensePokemonResponse_FieldNumber_PokemonId = 2,
  GetIncensePokemonResponse_FieldNumber_Latitude = 3,
  GetIncensePokemonResponse_FieldNumber_Longitude = 4,
  GetIncensePokemonResponse_FieldNumber_EncounterLocation = 5,
  GetIncensePokemonResponse_FieldNumber_EncounterId = 6,
  GetIncensePokemonResponse_FieldNumber_DisappearTimestampMs = 7,
  GetIncensePokemonResponse_FieldNumber_PokemonDisplay = 8,
};

@interface GetIncensePokemonResponse : GPBMessage

@property(nonatomic, readwrite) GetIncensePokemonResponse_Result result;

@property(nonatomic, readwrite) enum PokemonId pokemonId;

@property(nonatomic, readwrite) double latitude;

@property(nonatomic, readwrite) double longitude;

@property(nonatomic, readwrite, copy, null_resettable) NSString *encounterLocation;

@property(nonatomic, readwrite) uint64_t encounterId;

@property(nonatomic, readwrite) int64_t disappearTimestampMs;

@property(nonatomic, readwrite, strong, null_resettable) PokemonDisplay *pokemonDisplay;
/** Test to see if @c pokemonDisplay has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonDisplay;

@end

/**
 * Fetches the raw value of a @c GetIncensePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetIncensePokemonResponse_Result_RawValue(GetIncensePokemonResponse *message);
/**
 * Sets the raw value of an @c GetIncensePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetIncensePokemonResponse_Result_RawValue(GetIncensePokemonResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c GetIncensePokemonResponse's @c pokemonId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetIncensePokemonResponse_PokemonId_RawValue(GetIncensePokemonResponse *message);
/**
 * Sets the raw value of an @c GetIncensePokemonResponse's @c pokemonId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetIncensePokemonResponse_PokemonId_RawValue(GetIncensePokemonResponse *message, int32_t value);

#pragma mark - GetInventoryResponse

typedef GPB_ENUM(GetInventoryResponse_FieldNumber) {
  GetInventoryResponse_FieldNumber_Success = 1,
  GetInventoryResponse_FieldNumber_InventoryDelta = 2,
};

@interface GetInventoryResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) InventoryDelta *inventoryDelta;
/** Test to see if @c inventoryDelta has been set. */
@property(nonatomic, readwrite) BOOL hasInventoryDelta;

@end

#pragma mark - GetMapObjectsResponse

typedef GPB_ENUM(GetMapObjectsResponse_FieldNumber) {
  GetMapObjectsResponse_FieldNumber_MapCellsArray = 1,
  GetMapObjectsResponse_FieldNumber_Status = 2,
  GetMapObjectsResponse_FieldNumber_TimeOfDay = 3,
};

@interface GetMapObjectsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MapCell*> *mapCellsArray;
/** The number of items in @c mapCellsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mapCellsArray_Count;

@property(nonatomic, readwrite) enum MapObjectsStatus status;

@property(nonatomic, readwrite) GetMapObjectsResponse_TimeOfDay timeOfDay;

@end

/**
 * Fetches the raw value of a @c GetMapObjectsResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetMapObjectsResponse_Status_RawValue(GetMapObjectsResponse *message);
/**
 * Sets the raw value of an @c GetMapObjectsResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetMapObjectsResponse_Status_RawValue(GetMapObjectsResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c GetMapObjectsResponse's @c timeOfDay property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetMapObjectsResponse_TimeOfDay_RawValue(GetMapObjectsResponse *message);
/**
 * Sets the raw value of an @c GetMapObjectsResponse's @c timeOfDay property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetMapObjectsResponse_TimeOfDay_RawValue(GetMapObjectsResponse *message, int32_t value);

#pragma mark - GetPlayerProfileResponse

typedef GPB_ENUM(GetPlayerProfileResponse_FieldNumber) {
  GetPlayerProfileResponse_FieldNumber_Result = 1,
  GetPlayerProfileResponse_FieldNumber_StartTime = 2,
  GetPlayerProfileResponse_FieldNumber_BadgesArray = 3,
  GetPlayerProfileResponse_FieldNumber_GymBadges = 4,
};

@interface GetPlayerProfileResponse : GPBMessage

@property(nonatomic, readwrite) GetPlayerProfileResponse_Result result;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PlayerBadge*> *badgesArray;
/** The number of items in @c badgesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger badgesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GetPlayerProfileResponse_GymBadges *gymBadges;
/** Test to see if @c gymBadges has been set. */
@property(nonatomic, readwrite) BOOL hasGymBadges;

@end

/**
 * Fetches the raw value of a @c GetPlayerProfileResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetPlayerProfileResponse_Result_RawValue(GetPlayerProfileResponse *message);
/**
 * Sets the raw value of an @c GetPlayerProfileResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetPlayerProfileResponse_Result_RawValue(GetPlayerProfileResponse *message, int32_t value);

#pragma mark - GetPlayerProfileResponse_GymBadges

typedef GPB_ENUM(GetPlayerProfileResponse_GymBadges_FieldNumber) {
  GetPlayerProfileResponse_GymBadges_FieldNumber_GymBadgeArray = 1,
  GetPlayerProfileResponse_GymBadges_FieldNumber_Total = 2,
};

@interface GetPlayerProfileResponse_GymBadges : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AwardedGymBadge*> *gymBadgeArray;
/** The number of items in @c gymBadgeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gymBadgeArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - GetPlayerResponse

typedef GPB_ENUM(GetPlayerResponse_FieldNumber) {
  GetPlayerResponse_FieldNumber_Success = 1,
  GetPlayerResponse_FieldNumber_PlayerData = 2,
  GetPlayerResponse_FieldNumber_Banned = 3,
  GetPlayerResponse_FieldNumber_Warn = 4,
};

@interface GetPlayerResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@property(nonatomic, readwrite) BOOL banned;

@property(nonatomic, readwrite) BOOL warn;

@end

#pragma mark - GymDeployResponse

typedef GPB_ENUM(GymDeployResponse_FieldNumber) {
  GymDeployResponse_FieldNumber_Result = 1,
  GymDeployResponse_FieldNumber_GymStatusAndDefenders = 2,
  GymDeployResponse_FieldNumber_AwardedGymBadge = 3,
  GymDeployResponse_FieldNumber_CooldownCompleteTimestampMs = 4,
};

@interface GymDeployResponse : GPBMessage

@property(nonatomic, readwrite) GymDeployResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) GymStatusAndDefenders *gymStatusAndDefenders;
/** Test to see if @c gymStatusAndDefenders has been set. */
@property(nonatomic, readwrite) BOOL hasGymStatusAndDefenders;

@property(nonatomic, readwrite, strong, null_resettable) AwardedGymBadge *awardedGymBadge;
/** Test to see if @c awardedGymBadge has been set. */
@property(nonatomic, readwrite) BOOL hasAwardedGymBadge;

@property(nonatomic, readwrite) int64_t cooldownCompleteTimestampMs;

@end

/**
 * Fetches the raw value of a @c GymDeployResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GymDeployResponse_Result_RawValue(GymDeployResponse *message);
/**
 * Sets the raw value of an @c GymDeployResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGymDeployResponse_Result_RawValue(GymDeployResponse *message, int32_t value);

#pragma mark - GymFeedPokemonResponse

typedef GPB_ENUM(GymFeedPokemonResponse_FieldNumber) {
  GymFeedPokemonResponse_FieldNumber_Result = 1,
  GymFeedPokemonResponse_FieldNumber_GymStatusAndDefenders = 2,
  GymFeedPokemonResponse_FieldNumber_AwardedGymBadge = 3,
  GymFeedPokemonResponse_FieldNumber_StardustAwarded = 4,
  GymFeedPokemonResponse_FieldNumber_XpAwarded = 5,
  GymFeedPokemonResponse_FieldNumber_NumCandyAwarded = 6,
  GymFeedPokemonResponse_FieldNumber_FamilyCandyId = 7,
  GymFeedPokemonResponse_FieldNumber_CooldownComplete = 8,
};

@interface GymFeedPokemonResponse : GPBMessage

@property(nonatomic, readwrite) GymFeedPokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) GymStatusAndDefenders *gymStatusAndDefenders;
/** Test to see if @c gymStatusAndDefenders has been set. */
@property(nonatomic, readwrite) BOOL hasGymStatusAndDefenders;

@property(nonatomic, readwrite, strong, null_resettable) AwardedGymBadge *awardedGymBadge;
/** Test to see if @c awardedGymBadge has been set. */
@property(nonatomic, readwrite) BOOL hasAwardedGymBadge;

@property(nonatomic, readwrite) int32_t stardustAwarded;

@property(nonatomic, readwrite) int32_t xpAwarded;

@property(nonatomic, readwrite) int32_t numCandyAwarded;

@property(nonatomic, readwrite) enum PokemonFamilyId familyCandyId;

@property(nonatomic, readwrite) int64_t cooldownComplete;

@end

/**
 * Fetches the raw value of a @c GymFeedPokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GymFeedPokemonResponse_Result_RawValue(GymFeedPokemonResponse *message);
/**
 * Sets the raw value of an @c GymFeedPokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGymFeedPokemonResponse_Result_RawValue(GymFeedPokemonResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c GymFeedPokemonResponse's @c familyCandyId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GymFeedPokemonResponse_FamilyCandyId_RawValue(GymFeedPokemonResponse *message);
/**
 * Sets the raw value of an @c GymFeedPokemonResponse's @c familyCandyId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGymFeedPokemonResponse_FamilyCandyId_RawValue(GymFeedPokemonResponse *message, int32_t value);

#pragma mark - GymGetInfoResponse

typedef GPB_ENUM(GymGetInfoResponse_FieldNumber) {
  GymGetInfoResponse_FieldNumber_GymStatusAndDefenders = 1,
  GymGetInfoResponse_FieldNumber_Name = 2,
  GymGetInfoResponse_FieldNumber_URL = 3,
  GymGetInfoResponse_FieldNumber_Result = 4,
  GymGetInfoResponse_FieldNumber_Description_p = 5,
  GymGetInfoResponse_FieldNumber_SecondaryURL = 6,
  GymGetInfoResponse_FieldNumber_AwardedGymBadge = 7,
  GymGetInfoResponse_FieldNumber_CheckinImageURL = 8,
  GymGetInfoResponse_FieldNumber_EventInfo = 9,
};

@interface GymGetInfoResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GymStatusAndDefenders *gymStatusAndDefenders;
/** Test to see if @c gymStatusAndDefenders has been set. */
@property(nonatomic, readwrite) BOOL hasGymStatusAndDefenders;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@property(nonatomic, readwrite) GymGetInfoResponse_Result result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secondaryURL;

@property(nonatomic, readwrite, strong, null_resettable) AwardedGymBadge *awardedGymBadge;
/** Test to see if @c awardedGymBadge has been set. */
@property(nonatomic, readwrite) BOOL hasAwardedGymBadge;

@property(nonatomic, readwrite, copy, null_resettable) NSString *checkinImageURL;

@property(nonatomic, readwrite, strong, null_resettable) EventInfo *eventInfo;
/** Test to see if @c eventInfo has been set. */
@property(nonatomic, readwrite) BOOL hasEventInfo;

@end

/**
 * Fetches the raw value of a @c GymGetInfoResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GymGetInfoResponse_Result_RawValue(GymGetInfoResponse *message);
/**
 * Sets the raw value of an @c GymGetInfoResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGymGetInfoResponse_Result_RawValue(GymGetInfoResponse *message, int32_t value);

#pragma mark - IncenseEncounterResponse

typedef GPB_ENUM(IncenseEncounterResponse_FieldNumber) {
  IncenseEncounterResponse_FieldNumber_Result = 1,
  IncenseEncounterResponse_FieldNumber_PokemonData = 2,
  IncenseEncounterResponse_FieldNumber_CaptureProbability = 3,
  IncenseEncounterResponse_FieldNumber_ActiveItem = 4,
};

@interface IncenseEncounterResponse : GPBMessage

@property(nonatomic, readwrite) IncenseEncounterResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *pokemonData;
/** Test to see if @c pokemonData has been set. */
@property(nonatomic, readwrite) BOOL hasPokemonData;

@property(nonatomic, readwrite, strong, null_resettable) CaptureProbability *captureProbability;
/** Test to see if @c captureProbability has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureProbability;

@property(nonatomic, readwrite) enum ItemId activeItem;

@end

/**
 * Fetches the raw value of a @c IncenseEncounterResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IncenseEncounterResponse_Result_RawValue(IncenseEncounterResponse *message);
/**
 * Sets the raw value of an @c IncenseEncounterResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIncenseEncounterResponse_Result_RawValue(IncenseEncounterResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c IncenseEncounterResponse's @c activeItem property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IncenseEncounterResponse_ActiveItem_RawValue(IncenseEncounterResponse *message);
/**
 * Sets the raw value of an @c IncenseEncounterResponse's @c activeItem property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIncenseEncounterResponse_ActiveItem_RawValue(IncenseEncounterResponse *message, int32_t value);

#pragma mark - LevelUpRewardsResponse

typedef GPB_ENUM(LevelUpRewardsResponse_FieldNumber) {
  LevelUpRewardsResponse_FieldNumber_Result = 1,
  LevelUpRewardsResponse_FieldNumber_ItemsAwardedArray = 2,
  LevelUpRewardsResponse_FieldNumber_ItemsUnlockedArray = 4,
  LevelUpRewardsResponse_FieldNumber_AvatarTemplateIdsArray = 5,
};

@interface LevelUpRewardsResponse : GPBMessage

@property(nonatomic, readwrite) LevelUpRewardsResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ItemAward*> *itemsAwardedArray;
/** The number of items in @c itemsAwardedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsAwardedArray_Count;

// |itemsUnlockedArray| contains |ItemId|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *itemsUnlockedArray;
/** The number of items in @c itemsUnlockedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsUnlockedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *avatarTemplateIdsArray;
/** The number of items in @c avatarTemplateIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger avatarTemplateIdsArray_Count;

@end

/**
 * Fetches the raw value of a @c LevelUpRewardsResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LevelUpRewardsResponse_Result_RawValue(LevelUpRewardsResponse *message);
/**
 * Sets the raw value of an @c LevelUpRewardsResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLevelUpRewardsResponse_Result_RawValue(LevelUpRewardsResponse *message, int32_t value);

#pragma mark - ListAvatarCustomizationsResponse

typedef GPB_ENUM(ListAvatarCustomizationsResponse_FieldNumber) {
  ListAvatarCustomizationsResponse_FieldNumber_Result = 1,
  ListAvatarCustomizationsResponse_FieldNumber_AvatarCustomizationsArray = 2,
};

@interface ListAvatarCustomizationsResponse : GPBMessage

@property(nonatomic, readwrite) ListAvatarCustomizationsResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AvatarCustomization*> *avatarCustomizationsArray;
/** The number of items in @c avatarCustomizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger avatarCustomizationsArray_Count;

@end

/**
 * Fetches the raw value of a @c ListAvatarCustomizationsResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ListAvatarCustomizationsResponse_Result_RawValue(ListAvatarCustomizationsResponse *message);
/**
 * Sets the raw value of an @c ListAvatarCustomizationsResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetListAvatarCustomizationsResponse_Result_RawValue(ListAvatarCustomizationsResponse *message, int32_t value);

#pragma mark - ListGymBadgesResponse

typedef GPB_ENUM(ListGymBadgesResponse_FieldNumber) {
  ListGymBadgesResponse_FieldNumber_GymBadgeArray = 1,
};

@interface ListGymBadgesResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AwardedGymBadge*> *gymBadgeArray;
/** The number of items in @c gymBadgeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gymBadgeArray_Count;

@end

#pragma mark - MarkTutorialCompleteResponse

typedef GPB_ENUM(MarkTutorialCompleteResponse_FieldNumber) {
  MarkTutorialCompleteResponse_FieldNumber_Success = 1,
  MarkTutorialCompleteResponse_FieldNumber_PlayerData = 2,
};

@interface MarkTutorialCompleteResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@end

#pragma mark - NicknamePokemonResponse

typedef GPB_ENUM(NicknamePokemonResponse_FieldNumber) {
  NicknamePokemonResponse_FieldNumber_Result = 1,
};

@interface NicknamePokemonResponse : GPBMessage

@property(nonatomic, readwrite) NicknamePokemonResponse_Result result;

@end

/**
 * Fetches the raw value of a @c NicknamePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NicknamePokemonResponse_Result_RawValue(NicknamePokemonResponse *message);
/**
 * Sets the raw value of an @c NicknamePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNicknamePokemonResponse_Result_RawValue(NicknamePokemonResponse *message, int32_t value);

#pragma mark - RegisterPushNotificationResponse

typedef GPB_ENUM(RegisterPushNotificationResponse_FieldNumber) {
  RegisterPushNotificationResponse_FieldNumber_Result = 1,
};

@interface RegisterPushNotificationResponse : GPBMessage

@property(nonatomic, readwrite) RegisterPushNotificationResponse_Result result;

@end

/**
 * Fetches the raw value of a @c RegisterPushNotificationResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RegisterPushNotificationResponse_Result_RawValue(RegisterPushNotificationResponse *message);
/**
 * Sets the raw value of an @c RegisterPushNotificationResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRegisterPushNotificationResponse_Result_RawValue(RegisterPushNotificationResponse *message, int32_t value);

#pragma mark - UpdateNotificationStatusResponse

typedef GPB_ENUM(UpdateNotificationStatusResponse_FieldNumber) {
  UpdateNotificationStatusResponse_FieldNumber_NotificationIdsArray = 1,
  UpdateNotificationStatusResponse_FieldNumber_CreateTimestampMsArray = 2,
  UpdateNotificationStatusResponse_FieldNumber_State = 3,
};

@interface UpdateNotificationStatusResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *notificationIdsArray;
/** The number of items in @c notificationIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger notificationIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *createTimestampMsArray;
/** The number of items in @c createTimestampMsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger createTimestampMsArray_Count;

@property(nonatomic, readwrite) UpdateNotificationStatusResponse_NotificationState state;

@end

/**
 * Fetches the raw value of a @c UpdateNotificationStatusResponse's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateNotificationStatusResponse_State_RawValue(UpdateNotificationStatusResponse *message);
/**
 * Sets the raw value of an @c UpdateNotificationStatusResponse's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateNotificationStatusResponse_State_RawValue(UpdateNotificationStatusResponse *message, int32_t value);

#pragma mark - OptOutPushNotificationCategoryResponse

@interface OptOutPushNotificationCategoryResponse : GPBMessage

@end

#pragma mark - PushNotificationRegistryResponse

typedef GPB_ENUM(PushNotificationRegistryResponse_FieldNumber) {
  PushNotificationRegistryResponse_FieldNumber_Result = 1,
};

@interface PushNotificationRegistryResponse : GPBMessage

@property(nonatomic, readwrite) PushNotificationRegistryResponse_Result result;

@end

/**
 * Fetches the raw value of a @c PushNotificationRegistryResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PushNotificationRegistryResponse_Result_RawValue(PushNotificationRegistryResponse *message);
/**
 * Sets the raw value of an @c PushNotificationRegistryResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPushNotificationRegistryResponse_Result_RawValue(PushNotificationRegistryResponse *message, int32_t value);

#pragma mark - RecycleInventoryItemResponse

typedef GPB_ENUM(RecycleInventoryItemResponse_FieldNumber) {
  RecycleInventoryItemResponse_FieldNumber_Result = 1,
  RecycleInventoryItemResponse_FieldNumber_NewCount = 2,
};

@interface RecycleInventoryItemResponse : GPBMessage

@property(nonatomic, readwrite) RecycleInventoryItemResponse_Result result;

@property(nonatomic, readwrite) int32_t newCount;

@end

/**
 * Fetches the raw value of a @c RecycleInventoryItemResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RecycleInventoryItemResponse_Result_RawValue(RecycleInventoryItemResponse *message);
/**
 * Sets the raw value of an @c RecycleInventoryItemResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRecycleInventoryItemResponse_Result_RawValue(RecycleInventoryItemResponse *message, int32_t value);

#pragma mark - RegisterBackgroundDeviceResponse

typedef GPB_ENUM(RegisterBackgroundDeviceResponse_FieldNumber) {
  RegisterBackgroundDeviceResponse_FieldNumber_Status = 1,
  RegisterBackgroundDeviceResponse_FieldNumber_Token = 2,
};

@interface RegisterBackgroundDeviceResponse : GPBMessage

@property(nonatomic, readwrite) RegisterBackgroundDeviceResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) BackgroundToken *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@end

/**
 * Fetches the raw value of a @c RegisterBackgroundDeviceResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RegisterBackgroundDeviceResponse_Status_RawValue(RegisterBackgroundDeviceResponse *message);
/**
 * Sets the raw value of an @c RegisterBackgroundDeviceResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRegisterBackgroundDeviceResponse_Status_RawValue(RegisterBackgroundDeviceResponse *message, int32_t value);

#pragma mark - ReleasePokemonResponse

typedef GPB_ENUM(ReleasePokemonResponse_FieldNumber) {
  ReleasePokemonResponse_FieldNumber_Result = 1,
  ReleasePokemonResponse_FieldNumber_CandyAwarded = 2,
};

@interface ReleasePokemonResponse : GPBMessage

@property(nonatomic, readwrite) ReleasePokemonResponse_Result result;

@property(nonatomic, readwrite) int32_t candyAwarded;

@end

/**
 * Fetches the raw value of a @c ReleasePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ReleasePokemonResponse_Result_RawValue(ReleasePokemonResponse *message);
/**
 * Sets the raw value of an @c ReleasePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetReleasePokemonResponse_Result_RawValue(ReleasePokemonResponse *message, int32_t value);

#pragma mark - SetAvatarItemAsViewedResponse

typedef GPB_ENUM(SetAvatarItemAsViewedResponse_FieldNumber) {
  SetAvatarItemAsViewedResponse_FieldNumber_Result = 1,
};

@interface SetAvatarItemAsViewedResponse : GPBMessage

@property(nonatomic, readwrite) SetAvatarItemAsViewedResponse_Result result;

@end

/**
 * Fetches the raw value of a @c SetAvatarItemAsViewedResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetAvatarItemAsViewedResponse_Result_RawValue(SetAvatarItemAsViewedResponse *message);
/**
 * Sets the raw value of an @c SetAvatarItemAsViewedResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetAvatarItemAsViewedResponse_Result_RawValue(SetAvatarItemAsViewedResponse *message, int32_t value);

#pragma mark - SetAvatarResponse

typedef GPB_ENUM(SetAvatarResponse_FieldNumber) {
  SetAvatarResponse_FieldNumber_Status = 1,
  SetAvatarResponse_FieldNumber_PlayerData = 2,
};

@interface SetAvatarResponse : GPBMessage

@property(nonatomic, readwrite) SetAvatarResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@end

/**
 * Fetches the raw value of a @c SetAvatarResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetAvatarResponse_Status_RawValue(SetAvatarResponse *message);
/**
 * Sets the raw value of an @c SetAvatarResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetAvatarResponse_Status_RawValue(SetAvatarResponse *message, int32_t value);

#pragma mark - SetBuddyPokemonResponse

typedef GPB_ENUM(SetBuddyPokemonResponse_FieldNumber) {
  SetBuddyPokemonResponse_FieldNumber_Result = 1,
  SetBuddyPokemonResponse_FieldNumber_UpdatedBuddy = 2,
};

@interface SetBuddyPokemonResponse : GPBMessage

@property(nonatomic, readwrite) SetBuddyPokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) BuddyPokemon *updatedBuddy;
/** Test to see if @c updatedBuddy has been set. */
@property(nonatomic, readwrite) BOOL hasUpdatedBuddy;

@end

/**
 * Fetches the raw value of a @c SetBuddyPokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetBuddyPokemonResponse_Result_RawValue(SetBuddyPokemonResponse *message);
/**
 * Sets the raw value of an @c SetBuddyPokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetBuddyPokemonResponse_Result_RawValue(SetBuddyPokemonResponse *message, int32_t value);

#pragma mark - SetContactSettingsResponse

typedef GPB_ENUM(SetContactSettingsResponse_FieldNumber) {
  SetContactSettingsResponse_FieldNumber_Status = 1,
  SetContactSettingsResponse_FieldNumber_PlayerData = 2,
};

@interface SetContactSettingsResponse : GPBMessage

@property(nonatomic, readwrite) SetContactSettingsResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@end

/**
 * Fetches the raw value of a @c SetContactSettingsResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetContactSettingsResponse_Status_RawValue(SetContactSettingsResponse *message);
/**
 * Sets the raw value of an @c SetContactSettingsResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetContactSettingsResponse_Status_RawValue(SetContactSettingsResponse *message, int32_t value);

#pragma mark - SetFavoritePokemonResponse

typedef GPB_ENUM(SetFavoritePokemonResponse_FieldNumber) {
  SetFavoritePokemonResponse_FieldNumber_Result = 1,
};

@interface SetFavoritePokemonResponse : GPBMessage

@property(nonatomic, readwrite) SetFavoritePokemonResponse_Result result;

@end

/**
 * Fetches the raw value of a @c SetFavoritePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetFavoritePokemonResponse_Result_RawValue(SetFavoritePokemonResponse *message);
/**
 * Sets the raw value of an @c SetFavoritePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetFavoritePokemonResponse_Result_RawValue(SetFavoritePokemonResponse *message, int32_t value);

#pragma mark - SetPlayerTeamResponse

typedef GPB_ENUM(SetPlayerTeamResponse_FieldNumber) {
  SetPlayerTeamResponse_FieldNumber_Status = 1,
  SetPlayerTeamResponse_FieldNumber_PlayerData = 2,
};

@interface SetPlayerTeamResponse : GPBMessage

@property(nonatomic, readwrite) SetPlayerTeamResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) PlayerData *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@end

/**
 * Fetches the raw value of a @c SetPlayerTeamResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SetPlayerTeamResponse_Status_RawValue(SetPlayerTeamResponse *message);
/**
 * Sets the raw value of an @c SetPlayerTeamResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSetPlayerTeamResponse_Status_RawValue(SetPlayerTeamResponse *message, int32_t value);

#pragma mark - SfidaActionLogResponse

typedef GPB_ENUM(SfidaActionLogResponse_FieldNumber) {
  SfidaActionLogResponse_FieldNumber_Result = 1,
  SfidaActionLogResponse_FieldNumber_LogEntriesArray = 2,
};

@interface SfidaActionLogResponse : GPBMessage

@property(nonatomic, readwrite) SfidaActionLogResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ActionLogEntry*> *logEntriesArray;
/** The number of items in @c logEntriesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logEntriesArray_Count;

@end

/**
 * Fetches the raw value of a @c SfidaActionLogResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SfidaActionLogResponse_Result_RawValue(SfidaActionLogResponse *message);
/**
 * Sets the raw value of an @c SfidaActionLogResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSfidaActionLogResponse_Result_RawValue(SfidaActionLogResponse *message, int32_t value);

#pragma mark - SfidaRegistrationResponse

typedef GPB_ENUM(SfidaRegistrationResponse_FieldNumber) {
  SfidaRegistrationResponse_FieldNumber_AccessToken = 1,
};

@interface SfidaRegistrationResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *accessToken;

@end

#pragma mark - StartGymBattleResponse

typedef GPB_ENUM(StartGymBattleResponse_FieldNumber) {
  StartGymBattleResponse_FieldNumber_Result = 1,
  StartGymBattleResponse_FieldNumber_BattleStartTimestampMs = 2,
  StartGymBattleResponse_FieldNumber_BattleEndTimestampMs = 3,
  StartGymBattleResponse_FieldNumber_BattleId = 4,
  StartGymBattleResponse_FieldNumber_Defender = 5,
  StartGymBattleResponse_FieldNumber_BattleLog = 6,
  StartGymBattleResponse_FieldNumber_Attacker = 7,
  StartGymBattleResponse_FieldNumber_Battle = 8,
};

@interface StartGymBattleResponse : GPBMessage

@property(nonatomic, readwrite) StartGymBattleResponse_Result result;

@property(nonatomic, readwrite) int64_t battleStartTimestampMs;

@property(nonatomic, readwrite) int64_t battleEndTimestampMs;

@property(nonatomic, readwrite, copy, null_resettable) NSString *battleId;

@property(nonatomic, readwrite, strong, null_resettable) BattleParticipant *defender;
/** Test to see if @c defender has been set. */
@property(nonatomic, readwrite) BOOL hasDefender;

@property(nonatomic, readwrite, strong, null_resettable) BattleLog *battleLog;
/** Test to see if @c battleLog has been set. */
@property(nonatomic, readwrite) BOOL hasBattleLog;

@property(nonatomic, readwrite, strong, null_resettable) BattleParticipant *attacker;
/** Test to see if @c attacker has been set. */
@property(nonatomic, readwrite) BOOL hasAttacker;

@property(nonatomic, readwrite, strong, null_resettable) Battle *battle;
/** Test to see if @c battle has been set. */
@property(nonatomic, readwrite) BOOL hasBattle;

@end

/**
 * Fetches the raw value of a @c StartGymBattleResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t StartGymBattleResponse_Result_RawValue(StartGymBattleResponse *message);
/**
 * Sets the raw value of an @c StartGymBattleResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetStartGymBattleResponse_Result_RawValue(StartGymBattleResponse *message, int32_t value);

#pragma mark - UpdateNotificationResponse

typedef GPB_ENUM(UpdateNotificationResponse_FieldNumber) {
  UpdateNotificationResponse_FieldNumber_NotificationIdsArray = 1,
  UpdateNotificationResponse_FieldNumber_CreateTimestampMsArray = 2,
  UpdateNotificationResponse_FieldNumber_State = 3,
};

@interface UpdateNotificationResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *notificationIdsArray;
/** The number of items in @c notificationIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger notificationIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *createTimestampMsArray;
/** The number of items in @c createTimestampMsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger createTimestampMsArray_Count;

@property(nonatomic, readwrite) enum NotificationState state;

@end

/**
 * Fetches the raw value of a @c UpdateNotificationResponse's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateNotificationResponse_State_RawValue(UpdateNotificationResponse *message);
/**
 * Sets the raw value of an @c UpdateNotificationResponse's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateNotificationResponse_State_RawValue(UpdateNotificationResponse *message, int32_t value);

#pragma mark - UpgradePokemonResponse

typedef GPB_ENUM(UpgradePokemonResponse_FieldNumber) {
  UpgradePokemonResponse_FieldNumber_Result = 1,
  UpgradePokemonResponse_FieldNumber_UpgradedPokemon = 2,
};

@interface UpgradePokemonResponse : GPBMessage

@property(nonatomic, readwrite) UpgradePokemonResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *upgradedPokemon;
/** Test to see if @c upgradedPokemon has been set. */
@property(nonatomic, readwrite) BOOL hasUpgradedPokemon;

@end

/**
 * Fetches the raw value of a @c UpgradePokemonResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpgradePokemonResponse_Result_RawValue(UpgradePokemonResponse *message);
/**
 * Sets the raw value of an @c UpgradePokemonResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpgradePokemonResponse_Result_RawValue(UpgradePokemonResponse *message, int32_t value);

#pragma mark - UseIncenseResponse

typedef GPB_ENUM(UseIncenseResponse_FieldNumber) {
  UseIncenseResponse_FieldNumber_Result = 1,
  UseIncenseResponse_FieldNumber_AppliedIncense = 2,
};

@interface UseIncenseResponse : GPBMessage

@property(nonatomic, readwrite) UseIncenseResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) AppliedItem *appliedIncense;
/** Test to see if @c appliedIncense has been set. */
@property(nonatomic, readwrite) BOOL hasAppliedIncense;

@end

/**
 * Fetches the raw value of a @c UseIncenseResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseIncenseResponse_Result_RawValue(UseIncenseResponse *message);
/**
 * Sets the raw value of an @c UseIncenseResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseIncenseResponse_Result_RawValue(UseIncenseResponse *message, int32_t value);

#pragma mark - UseItemCaptureResponse

typedef GPB_ENUM(UseItemCaptureResponse_FieldNumber) {
  UseItemCaptureResponse_FieldNumber_Success = 1,
  UseItemCaptureResponse_FieldNumber_ItemCaptureMult = 2,
  UseItemCaptureResponse_FieldNumber_ItemFleeMult = 3,
  UseItemCaptureResponse_FieldNumber_StopMovement = 4,
  UseItemCaptureResponse_FieldNumber_StopAttack = 5,
  UseItemCaptureResponse_FieldNumber_TargetMax = 6,
  UseItemCaptureResponse_FieldNumber_TargetSlow = 7,
};

@interface UseItemCaptureResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite) double itemCaptureMult;

@property(nonatomic, readwrite) double itemFleeMult;

@property(nonatomic, readwrite) BOOL stopMovement;

@property(nonatomic, readwrite) BOOL stopAttack;

@property(nonatomic, readwrite) BOOL targetMax;

@property(nonatomic, readwrite) BOOL targetSlow;

@end

#pragma mark - UseItemEggIncubatorResponse

typedef GPB_ENUM(UseItemEggIncubatorResponse_FieldNumber) {
  UseItemEggIncubatorResponse_FieldNumber_Result = 1,
  UseItemEggIncubatorResponse_FieldNumber_EggIncubator = 2,
};

@interface UseItemEggIncubatorResponse : GPBMessage

@property(nonatomic, readwrite) UseItemEggIncubatorResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) EggIncubator *eggIncubator;
/** Test to see if @c eggIncubator has been set. */
@property(nonatomic, readwrite) BOOL hasEggIncubator;

@end

/**
 * Fetches the raw value of a @c UseItemEggIncubatorResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemEggIncubatorResponse_Result_RawValue(UseItemEggIncubatorResponse *message);
/**
 * Sets the raw value of an @c UseItemEggIncubatorResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemEggIncubatorResponse_Result_RawValue(UseItemEggIncubatorResponse *message, int32_t value);

#pragma mark - UseItemEncounterResponse

typedef GPB_ENUM(UseItemEncounterResponse_FieldNumber) {
  UseItemEncounterResponse_FieldNumber_Status = 1,
  UseItemEncounterResponse_FieldNumber_CaptureProbability = 2,
  UseItemEncounterResponse_FieldNumber_ActiveItem = 3,
};

@interface UseItemEncounterResponse : GPBMessage

@property(nonatomic, readwrite) UseItemEncounterResponse_Status status;

@property(nonatomic, readwrite, strong, null_resettable) CaptureProbability *captureProbability;
/** Test to see if @c captureProbability has been set. */
@property(nonatomic, readwrite) BOOL hasCaptureProbability;

@property(nonatomic, readwrite) enum ItemId activeItem;

@end

/**
 * Fetches the raw value of a @c UseItemEncounterResponse's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemEncounterResponse_Status_RawValue(UseItemEncounterResponse *message);
/**
 * Sets the raw value of an @c UseItemEncounterResponse's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemEncounterResponse_Status_RawValue(UseItemEncounterResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c UseItemEncounterResponse's @c activeItem property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemEncounterResponse_ActiveItem_RawValue(UseItemEncounterResponse *message);
/**
 * Sets the raw value of an @c UseItemEncounterResponse's @c activeItem property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemEncounterResponse_ActiveItem_RawValue(UseItemEncounterResponse *message, int32_t value);

#pragma mark - UseItemGymResponse

typedef GPB_ENUM(UseItemGymResponse_FieldNumber) {
  UseItemGymResponse_FieldNumber_Result = 1,
  UseItemGymResponse_FieldNumber_UpdatedGp = 2,
};

@interface UseItemGymResponse : GPBMessage

@property(nonatomic, readwrite) UseItemGymResponse_Result result;

/** Gym Points (?) */
@property(nonatomic, readwrite) int64_t updatedGp;

@end

/**
 * Fetches the raw value of a @c UseItemGymResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemGymResponse_Result_RawValue(UseItemGymResponse *message);
/**
 * Sets the raw value of an @c UseItemGymResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemGymResponse_Result_RawValue(UseItemGymResponse *message, int32_t value);

#pragma mark - UseItemMoveRerollResponse

typedef GPB_ENUM(UseItemMoveRerollResponse_FieldNumber) {
  UseItemMoveRerollResponse_FieldNumber_Result = 1,
  UseItemMoveRerollResponse_FieldNumber_UpgradedPokemon = 2,
};

@interface UseItemMoveRerollResponse : GPBMessage

@property(nonatomic, readwrite) UseItemMoveRerollResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) PokemonData *upgradedPokemon;
/** Test to see if @c upgradedPokemon has been set. */
@property(nonatomic, readwrite) BOOL hasUpgradedPokemon;

@end

/**
 * Fetches the raw value of a @c UseItemMoveRerollResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemMoveRerollResponse_Result_RawValue(UseItemMoveRerollResponse *message);
/**
 * Sets the raw value of an @c UseItemMoveRerollResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemMoveRerollResponse_Result_RawValue(UseItemMoveRerollResponse *message, int32_t value);

#pragma mark - UseItemPotionResponse

typedef GPB_ENUM(UseItemPotionResponse_FieldNumber) {
  UseItemPotionResponse_FieldNumber_Result = 1,
  UseItemPotionResponse_FieldNumber_Stamina = 2,
};

@interface UseItemPotionResponse : GPBMessage

@property(nonatomic, readwrite) UseItemPotionResponse_Result result;

@property(nonatomic, readwrite) int32_t stamina;

@end

/**
 * Fetches the raw value of a @c UseItemPotionResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemPotionResponse_Result_RawValue(UseItemPotionResponse *message);
/**
 * Sets the raw value of an @c UseItemPotionResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemPotionResponse_Result_RawValue(UseItemPotionResponse *message, int32_t value);

#pragma mark - UseItemRareCandyResponse

typedef GPB_ENUM(UseItemRareCandyResponse_FieldNumber) {
  UseItemRareCandyResponse_FieldNumber_Result = 1,
  UseItemRareCandyResponse_FieldNumber_PokemonId = 2,
  UseItemRareCandyResponse_FieldNumber_UpdatedCandyCount = 3,
};

@interface UseItemRareCandyResponse : GPBMessage

@property(nonatomic, readwrite) UseItemRareCandyResponse_Result result;

@property(nonatomic, readwrite) enum PokemonId pokemonId;

@property(nonatomic, readwrite) int32_t updatedCandyCount;

@end

/**
 * Fetches the raw value of a @c UseItemRareCandyResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemRareCandyResponse_Result_RawValue(UseItemRareCandyResponse *message);
/**
 * Sets the raw value of an @c UseItemRareCandyResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemRareCandyResponse_Result_RawValue(UseItemRareCandyResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c UseItemRareCandyResponse's @c pokemonId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemRareCandyResponse_PokemonId_RawValue(UseItemRareCandyResponse *message);
/**
 * Sets the raw value of an @c UseItemRareCandyResponse's @c pokemonId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemRareCandyResponse_PokemonId_RawValue(UseItemRareCandyResponse *message, int32_t value);

#pragma mark - UseItemReviveResponse

typedef GPB_ENUM(UseItemReviveResponse_FieldNumber) {
  UseItemReviveResponse_FieldNumber_Result = 1,
  UseItemReviveResponse_FieldNumber_Stamina = 2,
};

@interface UseItemReviveResponse : GPBMessage

@property(nonatomic, readwrite) UseItemReviveResponse_Result result;

@property(nonatomic, readwrite) int32_t stamina;

@end

/**
 * Fetches the raw value of a @c UseItemReviveResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemReviveResponse_Result_RawValue(UseItemReviveResponse *message);
/**
 * Sets the raw value of an @c UseItemReviveResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemReviveResponse_Result_RawValue(UseItemReviveResponse *message, int32_t value);

#pragma mark - UseItemXpBoostResponse

typedef GPB_ENUM(UseItemXpBoostResponse_FieldNumber) {
  UseItemXpBoostResponse_FieldNumber_Result = 1,
  UseItemXpBoostResponse_FieldNumber_AppliedItems = 2,
};

@interface UseItemXpBoostResponse : GPBMessage

@property(nonatomic, readwrite) UseItemXpBoostResponse_Result result;

@property(nonatomic, readwrite, strong, null_resettable) AppliedItems *appliedItems;
/** Test to see if @c appliedItems has been set. */
@property(nonatomic, readwrite) BOOL hasAppliedItems;

@end

/**
 * Fetches the raw value of a @c UseItemXpBoostResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UseItemXpBoostResponse_Result_RawValue(UseItemXpBoostResponse *message);
/**
 * Sets the raw value of an @c UseItemXpBoostResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUseItemXpBoostResponse_Result_RawValue(UseItemXpBoostResponse *message, int32_t value);

#pragma mark - VerifyChallengeResponse

typedef GPB_ENUM(VerifyChallengeResponse_FieldNumber) {
  VerifyChallengeResponse_FieldNumber_Success = 1,
};

@interface VerifyChallengeResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
