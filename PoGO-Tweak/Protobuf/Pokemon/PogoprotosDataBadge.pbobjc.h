// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Data.Badge.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

 #import "PogoprotosEnums.pbobjc.h"
 #import "PogoprotosDataRaid.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GymBadgeStats;
@class PlayerRaidInfo;
GPB_ENUM_FWD_DECLARE(GymBadgeType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PogoprotosDataBadgeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PogoprotosDataBadgeRoot : GPBRootObject
@end

#pragma mark - AwardedGymBadge

typedef GPB_ENUM(AwardedGymBadge_FieldNumber) {
  AwardedGymBadge_FieldNumber_FortId = 1,
  AwardedGymBadge_FieldNumber_GymBadgeType = 2,
  AwardedGymBadge_FieldNumber_Score = 3,
  AwardedGymBadge_FieldNumber_GymBadgeStats = 4,
  AwardedGymBadge_FieldNumber_LastUpdateTimestampMs = 5,
  AwardedGymBadge_FieldNumber_Name = 6,
  AwardedGymBadge_FieldNumber_ImageURL = 7,
  AwardedGymBadge_FieldNumber_Description_p = 8,
  AwardedGymBadge_FieldNumber_Latitude = 9,
  AwardedGymBadge_FieldNumber_Longitude = 10,
  AwardedGymBadge_FieldNumber_LastCheckTimestampMs = 11,
  AwardedGymBadge_FieldNumber_EarnedPoints = 12,
  AwardedGymBadge_FieldNumber_Progress = 13,
  AwardedGymBadge_FieldNumber_LevelUp = 14,
  AwardedGymBadge_FieldNumber_Raids = 15,
};

@interface AwardedGymBadge : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fortId;

@property(nonatomic, readwrite) enum GymBadgeType gymBadgeType;

@property(nonatomic, readwrite) uint32_t score;

@property(nonatomic, readwrite, strong, null_resettable) GymBadgeStats *gymBadgeStats;
/** Test to see if @c gymBadgeStats has been set. */
@property(nonatomic, readwrite) BOOL hasGymBadgeStats;

@property(nonatomic, readwrite) uint64_t lastUpdateTimestampMs;

@property(nonatomic, readwrite) uint64_t lastCheckTimestampMs;

@property(nonatomic, readwrite) uint32_t earnedPoints;

@property(nonatomic, readwrite) float progress;

@property(nonatomic, readwrite) BOOL levelUp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imageURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite) double latitude;

@property(nonatomic, readwrite) double longitude;

@property(nonatomic, readwrite, strong, null_resettable) PlayerRaidInfo *raids;
/** Test to see if @c raids has been set. */
@property(nonatomic, readwrite) BOOL hasRaids;

@end

/**
 * Fetches the raw value of a @c AwardedGymBadge's @c gymBadgeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AwardedGymBadge_GymBadgeType_RawValue(AwardedGymBadge *message);
/**
 * Sets the raw value of an @c AwardedGymBadge's @c gymBadgeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAwardedGymBadge_GymBadgeType_RawValue(AwardedGymBadge *message, int32_t value);

#pragma mark - BadgeCaptureReward

typedef GPB_ENUM(BadgeCaptureReward_FieldNumber) {
  BadgeCaptureReward_FieldNumber_CaptureRewardMultiplier = 1,
  BadgeCaptureReward_FieldNumber_AvatarTemplateIdsArray = 2,
};

@interface BadgeCaptureReward : GPBMessage

@property(nonatomic, readwrite) float captureRewardMultiplier;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *avatarTemplateIdsArray;
/** The number of items in @c avatarTemplateIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger avatarTemplateIdsArray_Count;

@end

#pragma mark - GymBadgeStats

typedef GPB_ENUM(GymBadgeStats_FieldNumber) {
  GymBadgeStats_FieldNumber_TotalTimeDefendedMs = 1,
  GymBadgeStats_FieldNumber_NumBattlesWon = 2,
  GymBadgeStats_FieldNumber_NumBerriesFed = 3,
  GymBadgeStats_FieldNumber_NumDeploys = 4,
  GymBadgeStats_FieldNumber_NumBattlesLost = 5,
};

@interface GymBadgeStats : GPBMessage

@property(nonatomic, readwrite) uint64_t totalTimeDefendedMs;

@property(nonatomic, readwrite) uint32_t numBattlesWon;

@property(nonatomic, readwrite) uint32_t numBattlesLost;

@property(nonatomic, readwrite) uint32_t numBerriesFed;

@property(nonatomic, readwrite) uint32_t numDeploys;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
