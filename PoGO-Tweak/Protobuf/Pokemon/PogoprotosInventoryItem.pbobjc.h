// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Inventory.Item.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ItemId

typedef GPB_ENUM(ItemId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ItemId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ItemId_ItemUnknown = 0,
  ItemId_ItemPokeBall = 1,
  ItemId_ItemGreatBall = 2,
  ItemId_ItemUltraBall = 3,
  ItemId_ItemMasterBall = 4,
  ItemId_ItemPotion = 101,
  ItemId_ItemSuperPotion = 102,
  ItemId_ItemHyperPotion = 103,
  ItemId_ItemMaxPotion = 104,
  ItemId_ItemRevive = 201,
  ItemId_ItemMaxRevive = 202,
  ItemId_ItemLuckyEgg = 301,
  ItemId_ItemIncenseOrdinary = 401,
  ItemId_ItemIncenseSpicy = 402,
  ItemId_ItemIncenseCool = 403,
  ItemId_ItemIncenseFloral = 404,
  ItemId_ItemTroyDisk = 501,
  ItemId_ItemXAttack = 602,
  ItemId_ItemXDefense = 603,
  ItemId_ItemXMiracle = 604,
  ItemId_ItemRazzBerry = 701,
  ItemId_ItemBlukBerry = 702,
  ItemId_ItemNanabBerry = 703,
  ItemId_ItemWeparBerry = 704,
  ItemId_ItemPinapBerry = 705,
  ItemId_ItemSpecialCamera = 801,
  ItemId_ItemIncubatorBasicUnlimited = 901,
  ItemId_ItemIncubatorBasic = 902,
  ItemId_ItemPokemonStorageUpgrade = 1001,
  ItemId_ItemItemStorageUpgrade = 1002,
  ItemId_ItemSunStone = 1101,
  ItemId_ItemKingsRock = 1102,
  ItemId_ItemMetalCoat = 1103,
  ItemId_ItemDragonScale = 1104,
  ItemId_ItemUpGrade = 1105,
};

GPBEnumDescriptor *ItemId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ItemId_IsValidValue(int32_t value);

#pragma mark - Enum ItemType

typedef GPB_ENUM(ItemType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ItemType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ItemType_ItemTypeNone = 0,
  ItemType_ItemTypePokeball = 1,
  ItemType_ItemTypePotion = 2,
  ItemType_ItemTypeRevive = 3,
  ItemType_ItemTypeMap = 4,
  ItemType_ItemTypeBattle = 5,
  ItemType_ItemTypeFood = 6,
  ItemType_ItemTypeCamera = 7,
  ItemType_ItemTypeDisk = 8,
  ItemType_ItemTypeIncubator = 9,
  ItemType_ItemTypeIncense = 10,
  ItemType_ItemTypeXpBoost = 11,
  ItemType_ItemTypeInventoryUpgrade = 12,
  ItemType_ItemTypeEvolutionRequirement = 13,
};

GPBEnumDescriptor *ItemType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ItemType_IsValidValue(int32_t value);

#pragma mark - PogoprotosInventoryItemRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PogoprotosInventoryItemRoot : GPBRootObject
@end

#pragma mark - ItemAward

typedef GPB_ENUM(ItemAward_FieldNumber) {
  ItemAward_FieldNumber_ItemId = 1,
  ItemAward_FieldNumber_ItemCount = 2,
  ItemAward_FieldNumber_BonusCount = 3,
};

@interface ItemAward : GPBMessage

@property(nonatomic, readwrite) ItemId itemId;

@property(nonatomic, readwrite) int32_t itemCount;

@property(nonatomic, readwrite) int32_t bonusCount;

@end

/**
 * Fetches the raw value of a @c ItemAward's @c itemId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ItemAward_ItemId_RawValue(ItemAward *message);
/**
 * Sets the raw value of an @c ItemAward's @c itemId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetItemAward_ItemId_RawValue(ItemAward *message, int32_t value);

#pragma mark - ItemData

typedef GPB_ENUM(ItemData_FieldNumber) {
  ItemData_FieldNumber_ItemId = 1,
  ItemData_FieldNumber_Count = 2,
  ItemData_FieldNumber_Unseen = 3,
};

@interface ItemData : GPBMessage

@property(nonatomic, readwrite) ItemId itemId;

@property(nonatomic, readwrite) int32_t count;

@property(nonatomic, readwrite) BOOL unseen;

@end

/**
 * Fetches the raw value of a @c ItemData's @c itemId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ItemData_ItemId_RawValue(ItemData *message);
/**
 * Sets the raw value of an @c ItemData's @c itemId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetItemData_ItemId_RawValue(ItemData *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
